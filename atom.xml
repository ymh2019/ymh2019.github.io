<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>流年、乱了浮生</title>
  
  <subtitle>“勿忘初心，方得始终”</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-04-29T13:06:52.488Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>袁</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>最简单的sql注入</title>
    <link href="http://yoursite.com/2019/04/29/%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84sql%E6%B3%A8%E5%85%A5/"/>
    <id>http://yoursite.com/2019/04/29/最简单的sql注入/</id>
    <published>2019-04-29T13:04:39.000Z</published>
    <updated>2019-04-29T13:06:52.488Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这里写的是最简单的sql注入，刚入门其他之后再写。首先，先理解一下sql注入，百度百科：所谓sql注入，就是通过把sql命令插入到Web表单提交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的sql命令。具体来说，它是利用现有应用程序，将（恶意的）sql命令注入到后台数据库引擎执行的能力，它可以通过在Web表单中输入（恶意）sql语句得到一个存在安全漏洞的网站上的数据库，而不是按照设计者意图去执行sql语句。当应用程序使用输入内容来构造动态sql语句以访问数据库时，就会发生sql注入攻击。<a id="more"></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;比如做一个表单提交的页面就要连接数据库，连接数据库代码使用的就是许多sql语句，而sql注入攻击就是构造一个特殊的sql语句在不知道用户名密码的情况下直接登录。然后实验一下：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;先创建建一张数据表再添加几条记录（这里就不写了）用于测验，之后就是做一个有sql注入漏洞的web提交表单。代码：登录界面login.html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-8&quot; /&gt;</span><br><span class="line">&lt;title&gt;登录页面&lt;/title&gt;</span><br><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">form &#123; </span><br><span class="line">text-align: center; </span><br><span class="line">&#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form method=&quot;post&quot; action=&quot;login.php&quot;&gt;</span><br><span class="line">用户名：&lt;input type=&quot;text&quot; name=&apos;username&apos; maxlength=&quot;20&quot;/&gt;&lt;br /&gt;</span><br><span class="line">密　码：&lt;input type=&quot;password&quot; name=&apos;password&apos; maxlength=&quot;18&quot;/&gt;&lt;br /&gt;&lt;br /&gt;</span><br><span class="line">&lt;input type=&quot;submit&quot; value=&apos;登录&apos; name=&quot;submit&quot; /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>表单数据提交到login.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">header(&apos;content-type:text/html;charset=utf-8&apos;);</span><br><span class="line">error_reporting(E_ALL ^ E_NOTICE);</span><br><span class="line">if ( ( $_POST[&apos;username&apos;] != null ) &amp;&amp; ( $_POST[&apos;password&apos;] != null ) ) &#123;</span><br><span class="line">$userName = $_POST[&apos;username&apos;];</span><br><span class="line">$password = $_POST[&apos;password&apos;];</span><br><span class="line">$con = mysqli_connect(&apos;localhost&apos;,&apos;root&apos;,&apos;root&apos;);</span><br><span class="line">if (!$con) &#123; </span><br><span class="line">die(&apos;数据库连接失败&apos;.$mysql_error()); </span><br><span class="line">&#125; </span><br><span class="line">mysqli_select_db($con,&quot;ymh&quot;);</span><br><span class="line"></span><br><span class="line">$sql = &quot;select * from user where username = &apos;$userName&apos; and password=&apos;$password&apos;&quot;;</span><br><span class="line">$res = mysqli_query($con,$sql);</span><br><span class="line">$arr = mysqli_fetch_assoc($res);</span><br><span class="line">if($arr)</span><br><span class="line">&#123;</span><br><span class="line">header(&apos;Location: welcome.html&apos;);</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">echo&quot;&lt;script&gt;alert(&apos;用户名或密码错误！&apos;);location.href = &apos;login.html&apos;;&lt;/script&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">echo&quot;&lt;script&gt;alert(&apos;用户名和密码不能为空！&apos;);location.href = &apos;login.html&apos;;&lt;/script&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这一步是web表单最重要的一步连接数据库，但也是sql漏洞所在。看上面代码是直接将提交过来的数据执行，没有进行任何防范措施，也就是这一句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql = &quot;select * from user where username = &apos;$userName&apos; and password=&apos;$password&apos;&quot;;</span><br></pre></td></tr></table></figure><p>判断用户名密码是否正确，可以进行sql注入。</p><p>登陆成功welcome.html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;UTF-8&quot;&gt; </span><br><span class="line">&lt;title&gt;欢迎登陆&lt;/title&gt; </span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;p&gt;Hello World&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>先进PHPstudy中的MySQL-Front试一下，首先看正确的执行语句<img src="/2019/04/29/最简单的sql注入/blog/source/_posts/最简单的sql注入/QQ截图20190428203643.png" alt="1" title="1"></p><p>然后就是用’&nbsp;or&nbsp;1=1#构造sql语句：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from user where username = &apos;&apos; or 1=1#&apos; and password=&apos;123456&apos;</span><br></pre></td></tr></table></figure><p>执行一下：<img src="/2019/04/29/最简单的sql注入/blog/source/_posts/最简单的sql注入/QQ截图20190428204303.png" alt="2" title="2"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;可以看到执行成功并且表中所有值都显示出来了，这是因为#是注释的意思后面都被注释掉了，这时sql语句就等价与</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from user where username = &apos;&apos; or 1=1</span><br></pre></td></tr></table></figure><p>那这条语句是成立的，因为1=1是恒成立的，where语句为真。所以这条sql语句又等价于</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from user</span><br></pre></td></tr></table></figure><p>这条语句就是检索user表中所有字段。</p><p>这样在web表单提交页面用户名一栏输入’&nbsp;or&nbsp;1=1#，密码随意输就能登陆成功了。试一下<img src="/2019/04/29/最简单的sql注入/blog/source/_posts/最简单的sql注入/QQ截图20190428210012.png" alt="3" title="3"></p><p><br><img src="/2019/04/29/最简单的sql注入/blog/source/_posts/最简单的sql注入/QQ截图20190428210223.png" alt="4" title="4"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;登陆成功，sql注入完成。可以看出来sql注入就是通过构造特殊的sql语句来进行的，所以学习sql注入首先就要熟练各种sql语句、数据库的增删改查等。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;这里写的是最简单的sql注入，刚入门其他之后再写。首先，先理解一下sql注入，百度百科：所谓sql注入，就是通过把sql命令插入到Web表单提交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的sql命令。具体来说，它是利用现有应用程序，将（恶意的）sql命令注入到后台数据库引擎执行的能力，它可以通过在Web表单中输入（恶意）sql语句得到一个存在安全漏洞的网站上的数据库，而不是按照设计者意图去执行sql语句。当应用程序使用输入内容来构造动态sql语句以访问数据库时，就会发生sql注入攻击。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>最简单的sql注入&#39; or 1=1#</title>
    <link href="http://yoursite.com/2019/04/28/%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84sql%E6%B3%A8%E5%85%A5&#39;%20or%201=1#/"/>
    <id>http://yoursite.com/2019/04/28/最简单的sql注入&#39; or 1=1#/</id>
    <published>2019-04-28T06:28:37.000Z</published>
    <updated>2019-04-29T12:01:00.534Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这里写的是最简单的sql注入，刚入门其他之后再写。首先，先理解一下sql注入，百度百科：所谓sql注入，就是通过把sql命令插入到Web表单提交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的sql命令。具体来说，它是利用现有应用程序，将（恶意的）sql命令注入到后台数据库引擎执行的能力，它可以通过在Web表单中输入（恶意）sql语句得到一个存在安全漏洞的网站上的数据库，而不是按照设计者意图去执行sql语句。当应用程序使用输入内容来构造动态sql语句以访问数据库时，就会发生sql注入攻击。<a id="more"></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;比如做一个表单提交的页面就要连接数据库，连接数据库代码使用的就是许多sql语句，而sql注入攻击就是构造一个特殊的sql语句在不知道用户名密码的情况下直接登录。然后实验一下：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;先创建建一张数据表再添加几条记录（这里就不写了）用于测验，之后就是做一个有sql注入漏洞的web提交表单。代码：登录界面login.html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-8&quot; /&gt;</span><br><span class="line">&lt;title&gt;登录页面&lt;/title&gt;</span><br><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">form &#123; </span><br><span class="line">text-align: center; </span><br><span class="line">&#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form method=&quot;post&quot; action=&quot;login.php&quot;&gt;</span><br><span class="line">用户名：&lt;input type=&quot;text&quot; name=&apos;username&apos; maxlength=&quot;20&quot;/&gt;&lt;br /&gt;</span><br><span class="line">密　码：&lt;input type=&quot;password&quot; name=&apos;password&apos; maxlength=&quot;18&quot;/&gt;&lt;br /&gt;&lt;br /&gt;</span><br><span class="line">&lt;input type=&quot;submit&quot; value=&apos;登录&apos; name=&quot;submit&quot; /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>表单数据提交到login.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">header(&apos;content-type:text/html;charset=utf-8&apos;);</span><br><span class="line">error_reporting(E_ALL ^ E_NOTICE);</span><br><span class="line">if ( ( $_POST[&apos;username&apos;] != null ) &amp;&amp; ( $_POST[&apos;password&apos;] != null ) ) &#123;</span><br><span class="line">$userName = $_POST[&apos;username&apos;];</span><br><span class="line">$password = $_POST[&apos;password&apos;];</span><br><span class="line">$con = mysqli_connect(&apos;localhost&apos;,&apos;root&apos;,&apos;root&apos;);</span><br><span class="line">if (!$con) &#123; </span><br><span class="line">die(&apos;数据库连接失败&apos;.$mysql_error()); </span><br><span class="line">&#125; </span><br><span class="line">mysqli_select_db($con,&quot;ymh&quot;);</span><br><span class="line"></span><br><span class="line">$sql = &quot;select * from user where username = &apos;$userName&apos; and password=&apos;$password&apos;&quot;;</span><br><span class="line">$res = mysqli_query($con,$sql);</span><br><span class="line">$arr = mysqli_fetch_assoc($res);</span><br><span class="line">if($arr)</span><br><span class="line">&#123;</span><br><span class="line">header(&apos;Location: welcome.html&apos;);</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">echo&quot;&lt;script&gt;alert(&apos;用户名或密码错误！&apos;);location.href = &apos;login.html&apos;;&lt;/script&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">echo&quot;&lt;script&gt;alert(&apos;用户名和密码不能为空！&apos;);location.href = &apos;login.html&apos;;&lt;/script&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这一步是web表单最重要的一步连接数据库，但也是sql漏洞所在。看上面代码是直接将提交过来的数据执行，没有进行任何防范措施，也就是这一句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql = &quot;select * from user where username = &apos;$userName&apos; and password=&apos;$password&apos;&quot;;</span><br></pre></td></tr></table></figure><p>判断用户名密码是否正确，可以进行sql注入。</p><p>登陆成功welcome.html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;UTF-8&quot;&gt; </span><br><span class="line">&lt;title&gt;欢迎登陆&lt;/title&gt; </span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;p&gt;Hello World&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>先进PHPstudy中的MySQL-Front试一下，首先看正确的执行语句<img src="/2019/04/28/最简单的sql注入' or 1=1#/QQ截图20190428203643.png" alt="1" title="1"></p><p>然后就是用’&nbsp;or&nbsp;1=1#构造sql语句：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from user where username = &apos;&apos; or 1=1#&apos; and password=&apos;123456&apos;</span><br></pre></td></tr></table></figure><p>执行一下：<img src="/2019/04/28/最简单的sql注入' or 1=1#/QQ截图20190428204303.png" alt="2" title="2"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;可以看到执行成功并且表中所有值都显示出来了，这是因为#是注释的意思后面都被注释掉了，这时sql语句就等价与</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from user where username = &apos;&apos; or 1=1</span><br></pre></td></tr></table></figure><p>那这条语句是成立的，因为1=1是恒成立的，where语句为真。所以这条sql语句又等价于</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from user</span><br></pre></td></tr></table></figure><p>这条语句就是检索user表中所有字段。</p><p>这样在web表单提交页面用户名一栏输入’&nbsp;or&nbsp;1=1#，密码随意输就能登陆成功了。试一下<img src="/2019/04/28/最简单的sql注入' or 1=1#/QQ截图20190428210012.png" alt="3" title="3"></p><p><br><img src="/2019/04/28/最简单的sql注入' or 1=1#/QQ截图20190428210223.png" alt="4" title="4"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;登陆成功，sql注入完成。可以看出来sql注入就是通过构造特殊的sql语句来进行的，所以学习sql注入首先就要熟练各种sql语句、数据库的增删改查等。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;这里写的是最简单的sql注入，刚入门其他之后再写。首先，先理解一下sql注入，百度百科：所谓sql注入，就是通过把sql命令插入到Web表单提交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的sql命令。具体来说，它是利用现有应用程序，将（恶意的）sql命令注入到后台数据库引擎执行的能力，它可以通过在Web表单中输入（恶意）sql语句得到一个存在安全漏洞的网站上的数据库，而不是按照设计者意图去执行sql语句。当应用程序使用输入内容来构造动态sql语句以访问数据库时，就会发生sql注入攻击。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>简单登录注册页面</title>
    <link href="http://yoursite.com/2019/04/21/%E7%AE%80%E5%8D%95%E7%99%BB%E5%BD%95%E6%B3%A8%E5%86%8C%E9%A1%B5%E9%9D%A2/"/>
    <id>http://yoursite.com/2019/04/21/简单登录注册页面/</id>
    <published>2019-04-21T11:08:20.000Z</published>
    <updated>2019-04-23T11:12:22.742Z</updated>
    
    <content type="html"><![CDATA[<p>使用工具：PHPstudy</p><p>打开PHPstudy，进入WWW目录，我是建了3个html文件和2个php文件，分别是login.html（登录页面）、enter.php（登录后台判断）、register.html（注册页面）、register.php（注册后台判断）、welcome.html（登陆成功后欢迎界面）。第一次做web页面，很简陋……代码：<a id="more"></a></p><p>login.html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-8&quot; /&gt;</span><br><span class="line">&lt;title&gt;登录页面&lt;/title&gt;</span><br><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">form &#123; </span><br><span class="line">text-align: center; </span><br><span class="line">&#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form method=&quot;post&quot; action=&quot;http://localhost/enter.php&quot;&gt;</span><br><span class="line">用户名：&lt;input type=&quot;text&quot; name=&apos;username&apos; maxlength=&quot;20&quot;/&gt;&lt;br /&gt;</span><br><span class="line">密　码：&lt;input type=&quot;password&quot; name=&apos;password&apos; maxlength=&quot;18&quot;/&gt;&lt;br /&gt;&lt;br /&gt;</span><br><span class="line">&lt;input type=&quot;submit&quot; value=&apos;登录&apos; name=&quot;submit&quot; /&gt;</span><br><span class="line">&lt;a href=&quot;http://localhost/register.html&quot;&gt;</span><br><span class="line">&lt;input type=&quot;button&quot; value=&quot;注册&quot; name=&quot;button&quot; /&gt; </span><br><span class="line">&lt;/a&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>enter.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">header(&apos;content-type:text/html;charset=utf-8&apos;);</span><br><span class="line">error_reporting(E_ALL ^ E_NOTICE);//屏蔽notice提示错误</span><br><span class="line">//初次访问</span><br><span class="line">if ( ( $_POST[&apos;username&apos;] != null ) &amp;&amp; ( $_POST[&apos;password&apos;] != null ) ) &#123;</span><br><span class="line">$userName = $_POST[&apos;username&apos;];</span><br><span class="line">$password = $_POST[&apos;password&apos;];</span><br><span class="line">$con = mysqli_connect(&apos;localhost&apos;,&apos;root&apos;,&apos;root&apos;);//连接数据库</span><br><span class="line">if (!$con) &#123; </span><br><span class="line">die(&apos;数据库连接失败&apos;.$mysql_error()); </span><br><span class="line">&#125; </span><br><span class="line">mysqli_select_db($con,&quot;ymh&quot;);//选择数据库</span><br><span class="line"></span><br><span class="line">$sql = &quot;select * from user where username = &apos;&#123;$userName&#125;&apos; &quot;;</span><br><span class="line">$res = mysqli_query($con,$sql);</span><br><span class="line">$arr = mysqli_fetch_assoc($res);</span><br><span class="line">if($arr)&#123;</span><br><span class="line">if ($arr[&apos;password&apos;] == $password)</span><br><span class="line">&#123;                 </span><br><span class="line">setcookie(&apos;username&apos;,$userName,time()+3600,&apos;/&apos;);</span><br><span class="line">setcookie(&apos;password&apos;,$password,time()+3600,&apos;/&apos;);</span><br><span class="line">header(&apos;Location: http://localhost/welcome.html&apos;);</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">echo&quot;&lt;script&gt;alert(&apos;用户名或密码错误！&apos;);location.href = &apos;http://localhost/login.html&apos;;&lt;/script&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">echo&quot;&lt;script&gt;alert(&apos;用户名不存在！&apos;);location.href = &apos;http://localhost/login.html&apos;;&lt;/script&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">echo&quot;&lt;script&gt;alert(&apos;用户名和密码不能为空！&apos;);location.href = &apos;http://localhost/login.html&apos;;&lt;/script&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">//再次访问</span><br><span class="line">if ( ($_COOKIE[&apos;username&apos;]!= null)&amp;&amp;($_COOKIE[&apos;password&apos;]!= null) ) &#123;</span><br><span class="line">$userName = $_COOKIE[&apos;username&apos;];</span><br><span class="line">$password = $_COOKIE[&apos;password&apos;];</span><br><span class="line">$con = mysqli_connect(&apos;localhost&apos;,&apos;root&apos;,&apos;root&apos;,&apos;ymh&apos;);</span><br><span class="line">$res = mysqli_query($con,&quot;select * from ymh where username=&apos;&#123;$userName&#125;&apos;&quot;);</span><br><span class="line">$row = mysqli_fetch_assoc($res);</span><br><span class="line">if ($row[&apos;password&apos;] == $password) &#123;</span><br><span class="line">header(&apos;Location: http://localhost/welcome.html&apos; . &quot;?username=&#123;$userName&#125;&quot;);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">echo&quot;&lt;script&gt;location.href = &apos;http://localhost/login.html&apos;;&lt;/script&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>register.html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-8&quot; /&gt;</span><br><span class="line">&lt;title&gt;注册页面&lt;/title&gt;</span><br><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">form &#123; </span><br><span class="line">text-align: center; </span><br><span class="line">&#125; </span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form method=&quot;post&quot; action=&quot;http://localhost/register.php&quot;&gt;</span><br><span class="line">　　用户名：&lt;input type=&quot;text&quot; name=&apos;username&apos; maxlength=&quot;20&quot;/&gt;&lt;br /&gt;</span><br><span class="line">请设置密码：&lt;input type=&quot;password&quot; name=&apos;password1&apos; maxlength=&quot;18&quot;/&gt;&lt;br /&gt;</span><br><span class="line">请确认密码：&lt;input type=&quot;password&quot; name=&apos;password2&apos; maxlength=&quot;18&quot;/&gt;&lt;br /&gt;&lt;br /&gt;</span><br><span class="line">&lt;input type=&quot;submit&quot; value=&quot;立即注册&quot; name=&quot;submit&quot; style=&quot;margin-left:99px; margin-right:0px;padding-left:60px;padding-right:57px;&quot;/&gt; </span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>register.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">header(&apos;content-type:text/html;charset=utf-8&apos;);</span><br><span class="line">error_reporting(E_ALL ^ E_NOTICE);</span><br><span class="line">if ( ( $_POST[&apos;username&apos;] != null ) &amp;&amp; ( $_POST[&apos;password1&apos;] != null ) &amp;&amp; ( $_POST[&apos;password2&apos;] != null ))&#123;</span><br><span class="line">$userName = $_POST[&apos;username&apos;];</span><br><span class="line">$password1 = $_POST[&apos;password1&apos;];</span><br><span class="line">$password2 = $_POST[&apos;password2&apos;];</span><br><span class="line">$con = mysqli_connect(&quot;localhost&quot;,&quot;root&quot;,&quot;root&quot;);</span><br><span class="line">mysqli_select_db($con,&quot;ymh&quot;);</span><br><span class="line">$sql1 = &quot;select * from user where username = &apos;&#123;$userName&#125;&apos; &quot;;</span><br><span class="line">$res = mysqli_query($con,$sql1);</span><br><span class="line">$row = mysqli_num_rows($res);</span><br><span class="line">if($row&gt;0)&#123;</span><br><span class="line">echo&quot;&lt;script&gt;alert(&apos;用户名已存在！&apos;);location.href = &apos;http://localhost/register.html&apos;;&lt;/script&gt;&quot;;</span><br><span class="line">exit;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">if($password1!==$password2)&#123;</span><br><span class="line">echo&quot;&lt;script&gt;alert(&apos;两次输入的密码不一致！&apos;);location.href = &apos;http://localhost/register.html&apos;;&lt;/script&gt;&quot;;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">$sql2=&quot;insert into user(username,password) values (&apos;$userName&apos;,&apos;$password1&apos;)&quot;;</span><br><span class="line">if(mysqli_query($con,$sql2))&#123;</span><br><span class="line">echo&quot;&lt;script&gt;alert(&apos;注册成功！&apos;);location.href = &apos;http://localhost/login.html&apos;;&lt;/script&gt;&quot;;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">echo&quot;&lt;script&gt;alert(&apos;注册失败！&apos;);location.href = &apos;http://localhost/register.html&apos;;&lt;/script&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">echo&quot;&lt;script&gt;alert(&apos;用户名和密码不能为空！&apos;);location.href = &apos;http://localhost/register.html&apos;;&lt;/script&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>welcome.html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;UTF-8&quot;&gt; </span><br><span class="line">&lt;title&gt;欢迎登陆&lt;/title&gt; </span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;p&gt;Hello World&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用工具：PHPstudy&lt;/p&gt;
&lt;p&gt;打开PHPstudy，进入WWW目录，我是建了3个html文件和2个php文件，分别是login.html（登录页面）、enter.php（登录后台判断）、register.html（注册页面）、register.php（注册后台判断）、welcome.html（登陆成功后欢迎界面）。第一次做web页面，很简陋……代码：&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>PHP函数、数组和字符串处理</title>
    <link href="http://yoursite.com/2019/04/11/PHP%E5%87%BD%E6%95%B0%E3%80%81%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86/"/>
    <id>http://yoursite.com/2019/04/11/PHP函数、数组和字符串处理/</id>
    <published>2019-04-11T08:15:51.000Z</published>
    <updated>2019-04-16T11:26:04.738Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-函数（一）：自定义函数"><a href="#1-函数（一）：自定义函数" class="headerlink" title="1.函数（一）：自定义函数"></a>1.函数（一）：自定义函数</h4><p>1）基本格式：</p><p>function&nbsp;函数名（参数1，…，参数n[可以省略]）{<br>        函数体；//任何有效的PHP代码<br>        return&nbsp;值；//也可以不返回值<br>    }<br><a id="more"></a>    函数名（）；//函数的调用，函数名与上面一致</p><p>2）参数：</p><p>​    分为形式参数和实际参数，形式参数由零个、一个或多个变量组成，实际参数由零个、一个或多个参数组成，每个参数是一个表达式用逗号隔开。例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">function add($a,$b)&#123;//形式参数，没有具体的值。</span><br><span class="line">    echo $a+$b;</span><br><span class="line">&#125;</span><br><span class="line">add(10,20);//实际参数，输出30。</span><br><span class="line">echo &apos;&lt;br&gt;&apos;;</span><br><span class="line">$i=100;</span><br><span class="line">add($i,20);//输出120</span><br><span class="line">?&gt;//实际参数和形式参数要一一对应。</span><br></pre></td></tr></table></figure><p>3）返回值：如果不写则函数默认返回值为null，例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">function add($a,$b)&#123;</span><br><span class="line">    return $a+$b;//返回值给调用的地方，结束函数运行</span><br><span class="line">&#125;</span><br><span class="line">var_dump(add(10,20));//输出int 30。</span><br><span class="line">$i=add(10,20);</span><br><span class="line">echo $i;</span><br><span class="line">?&gt;//输出30</span><br></pre></td></tr></table></figure><h4 id="2-函数（二）：PHP变量范围"><a href="#2-函数（二）：PHP变量范围" class="headerlink" title="2.函数（二）：PHP变量范围"></a>2.函数（二）：PHP变量范围</h4><p>1）局部变量：在函数内定义，作用仅限于函数内部。</p><p>function&nbsp;test（）{<br>    $a=1；//局部变量，仅在这个函数内部有效<br>    }<br>    echo&nbsp;​$a；//错误，无输出。</p><p>2）全局变量：在函数外定义，作用域从变量定义到本程序结尾，在PHP函数中无法直接使用，需用global声明变量。</p><p> $i=10；//全局变量<br>    define（’MY_NAME’，’袁’）；<br>    function&nbsp;test（）{<br>    echo&nbsp;MY_NAME；<br>    global&nbsp;$i；<br>    echo&nbsp;$i；<br>    }<br>    test（）；//输出袁、10。</p><p>3）静态变量：在函数内部定义变量时候使用static定义变量，静态变量仅在第一次执行函数的时候会初始化值。</p><p>function&nbsp;test（）{<br>        static&nbsp;$a=10；//静态变量，初始化静态变量，仅在第一次使用执行。<br>        echo&nbsp;++$a；<br>    }<br>    test（）；//输出11<br>    echo&nbsp;’&lt; br&gt;’；<br>    test（）；//输出12<br>    echo’&lt; br&gt;’；<br>    test（）；//输出13</p><h4 id="3-函数（三）：参数传递，可变函数"><a href="#3-函数（三）：参数传递，可变函数" class="headerlink" title="3.函数（三）：参数传递，可变函数"></a>3.函数（三）：参数传递，可变函数</h4><p>1）函数的传递</p><p>按值传递参数（默认方式）：对形式参数的操作，不会影响到实际参数（变量）的值，两者没有联系。例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">function test($a)&#123;</span><br><span class="line">echo ++$a;</span><br><span class="line">&#125;</span><br><span class="line">$i=10;</span><br><span class="line">test($i);</span><br><span class="line">echo &apos;&lt;br&gt;&apos;.$i;</span><br><span class="line">?&gt;//输出11、10</span><br></pre></td></tr></table></figure><p>按引用传递参数：相当于形式参数和实际参数指的是同一个人，只是名字不一样，对于形式参数的操作会直接影响到实际参数（变量）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">function test(&amp;$a)&#123;</span><br><span class="line">echo ++$a;</span><br><span class="line">&#125;</span><br><span class="line">$i=10;</span><br><span class="line">test($i);</span><br><span class="line">echo &apos;&lt;br&gt;&apos;.$i;</span><br><span class="line">?&gt;//输出11、11</span><br></pre></td></tr></table></figure><p>函数的默认参数：可以给形式参数设置默认值，设置方法直接赋值即可。给形式参数加默认值时是从右往左加的，右边的必须有，才能给左边加。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">function test($a=10,$b=20)&#123;</span><br><span class="line">echo $a+$b;</span><br><span class="line">&#125;</span><br><span class="line">test(20,20);</span><br><span class="line">?&gt;//输出40</span><br></pre></td></tr></table></figure><p>可变长度参数列表：PHP有提供给我们的函数，可直接使用。func_get_args()；func_get_arg()；func_num_args()；这三个函数可以使用在我们的自定义函数内部，返回一些关于参数的信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">function test()&#123;</span><br><span class="line">    var_dump(func_get_args());//返回一个数组类型，将实参列举出来</span><br><span class="line">    var_dump(func_get_arg(3));//传入一个值表示获取第几个实参（从0开始）</span><br><span class="line">    var_dump(func_num_args());//返回传入所在自定义函数的参数个数</span><br><span class="line">&#125;</span><br><span class="line">test(12,9,&apos;wasd&apos;,&apos;袁&apos;);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>2）可变函数（变量函数）</p><p>可变函数不能用于例如 echo，print，unset()，isset()，empty()，include，require 以及类似的语言结构。需要使用自己的包装函数来将这些结构用作可变函数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">function test()&#123;</span><br><span class="line">    echo &apos;我是test函数&apos;;</span><br><span class="line">&#125;</span><br><span class="line">$a=&apos;test&apos;;//把函数名赋值给变量</span><br><span class="line">$a();//相当于test();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h4 id="4-函数（四）：递归函数和内部（内置）函数"><a href="#4-函数（四）：递归函数和内部（内置）函数" class="headerlink" title="4.函数（四）：递归函数和内部（内置）函数"></a>4.函数（四）：递归函数和内部（内置）函数</h4><p>1）递归函数</p><p>递归函数即在函数内部自己调用自己的函数，函数在被调用的执行过程中会在内存里面分配空间用于存储临时数据，那么函数在执行过程中默认之间是没有联系的（除了静态变量、按引用传、全局变量），里面的变量默认都是局部变量，相互之间没有影响！递归函数，在函数的内部需要有适时结束函数运行的条件！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">function test($n)&#123;</span><br><span class="line">    echo $n.&apos;&amp;nbsp;&apos;;</span><br><span class="line">    if($n&gt;0)&#123;</span><br><span class="line">        test($n-1);//自己内部调用自己，即递归函数</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        echo&apos;&lt;--&gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    echo $n.&apos;&amp;nbsp;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">test(3);</span><br><span class="line">?&gt;//输出3 2 1 0 &lt;--&gt; 0 1 2 3</span><br></pre></td></tr></table></figure><p>2）内部（置）函数</p><p>PHP提供给我们许多现成的函数或者结构，比如：echo（）、include（）、include_once（）、require（）、require_once（），上面这些可以省略括号，严格意义上不是函数，所以这些不能赋值给另外的变量。还有一些函数需要开启特定的PHP扩展模块，否则在使用的时候会出现“未定义函数”的错误。只需要记一些常用的内部函数和扩展函数，其他有需要再去找对应函数。</p><h4 id="5-数组（一）：理解数组和创建数组"><a href="#5-数组（一）：理解数组和创建数组" class="headerlink" title="5.数组（一）：理解数组和创建数组"></a>5.数组（一）：理解数组和创建数组</h4><p>1）数组分类：</p><p>索引数组：索引值（相当于给里面的每一个数据起个名字）为整数的数组。</p><p>关联数组：索引值为字符串的数组，使用字符串作为索引。</p><p>2）数组创建：PHP数组与其他编程语言不同的是PHP不需要在创建数组时，指定数组大小甚至不需要在使用数组之前声明，也可以在同一个数组中存储任何类型的数据。</p><p>（1）$student[索引值]=具体的值；</p><p>如果省略索引值那么默认索引值就是整数，并且从0开始，依次递增。如：$student[0]=10；​$student[1]=’袁’；…相当于$student[&nbsp;]=10；​$student[&nbsp;]=’袁’；使用printf_r（$student）；输出。</p><p>（2）$student=array（索引值=&gt;具体值，……）；</p><p>例：$student1=array（<br>            0=&gt;10，<br>            1=&gt;’袁1’，<br>            2=&gt;true，<br>            3=&gt;60.5<br>        ）；//索引数组<br>或$student2=array（<br>            ‘num’=&gt;10，<br>            ‘name’=&gt;’袁2’，<br>            ‘sex’=&gt;true，<br>            ‘grade’=&gt;60.5<br>        ）；//关联数组<br>        或$student3=array（<br>            0=&gt;array(1,’小明’,true,70.5)，<br>            1=&gt;array(2,’小强’,true,75.5)，<br>            2=&gt;array(3,’小红’,false,80.5)<br>        ）；//二维数组</p><p>多维数组访问数值方法：变量名称[索引值][索引值]</p><h4 id="6-数组（二）：遍历数组"><a href="#6-数组（二）：遍历数组" class="headerlink" title="6.数组（二）：遍历数组"></a>6.数组（二）：遍历数组</h4><p>1）for循环：用得少只能用于索引数组。</p><p>2）foreach语句实现遍历数组目的，格式：</p><p>foreach（数组变量&nbsp;as&nbsp;变量1=&gt;变量2）{<br>        每次循环执行的语句<br>        变量1代表当前正在访问的数据的索引值<br>        变量2代表当前正在访问的数据<br>    }</p><p>实例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$student=array(</span><br><span class="line">array(&apos;小明&apos;,1,true,60.5),</span><br><span class="line">array(&apos;小强&apos;,2,true,70.5),</span><br><span class="line">array(&apos;小红&apos;,3,false,80.5)</span><br><span class="line">);</span><br><span class="line">echo &apos;&lt;table border=1&gt;&apos;;</span><br><span class="line">foreach($student as $val)&#123;</span><br><span class="line">    if($val[2]===true)&#123;</span><br><span class="line">        $val[2]=&apos;男&apos;;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        $val[2]=&apos;女&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    echo &quot;&lt;tr&gt;&lt;td&gt;&#123;$val[0]&#125;&lt;/td&gt;&lt;td&gt;&#123;$val[1]&#125;&lt;/td&gt;&lt;td&gt;&#123;$val[2]&#125;&lt;/td&gt;&lt;td&gt;&#123;$val[3]&#125;&lt;/td&gt;&lt;/tr&gt;&quot;;</span><br><span class="line">&#125;;</span><br><span class="line">echo &apos;&lt;/table&gt;&apos;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h4 id="7-数组（三）：预定义超全局数组"><a href="#7-数组（三）：预定义超全局数组" class="headerlink" title="7.数组（三）：预定义超全局数组"></a>7.数组（三）：预定义超全局数组</h4><p>预定义数组变量：已经定义好（存在）的变量（存放的数据的类型是数组）。<a href="https://www.php.net/manual/zh/language.variables.superglobals.php" target="_blank" rel="noopener">超全局变量</a></p><p>传递（提交）数据给服务器的两种方式：</p><p>get方式：格式：url地址？参数名=参数值&amp;参数名=参数值……，在服务器端（请求的php文件这边）可以通过$_GET来获取到，$_GET索引值为参数名，索引值对应的数据就是参数值。</p><p>post方式：比如表单、post发送过来的。可以通过$_POST来获取到。例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$_POST;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-8&quot; /&gt;</span><br><span class="line">&lt;title&gt;预定义超全局变量&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form method=&quot;post&quot;&gt;</span><br><span class="line">姓名：&lt;input type=&quot;text&quot; name=&apos;username&apos; /&gt;&lt;br /&gt;</span><br><span class="line">性别：&lt;input type=&quot;text&quot; name=&apos;sex&apos; /&gt;&lt;br /&gt;</span><br><span class="line">&lt;input type=&quot;submit&quot; value=&apos;提交&apos; /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="8-数组（四）：处理数组的相关函数"><a href="#8-数组（四）：处理数组的相关函数" class="headerlink" title="8.数组（四）：处理数组的相关函数"></a>8.数组（四）：处理数组的相关函数</h4><p><a href="http://www.w3school.com.cn/php/php_ref_array.asp" target="_blank" rel="noopener">数组函数</a> 部分函数举例：</p><p>1）array_count_values（）：用于统计数组中所有值出现的次数。        </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$array = array(1, &quot;hello&quot;, 1, &quot;world&quot;, &quot;hello&quot;)；$arr=array_count_values($array)；//函数返回数组类型的数据print_r($array);</span><br></pre></td></tr></table></figure><p>2）array_key_exists（）：检查指定的键名是否存在于数组中。        </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$search_array = array(&apos;first&apos; =&gt; 1, &apos;second&apos; =&gt; 4);</span><br><span class="line">var_dump(array_key_exists(&apos;second&apos;,$search_array));</span><br></pre></td></tr></table></figure><p>3）array_search（）：搜索数组中给定的值并返回键名。        </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$array = array(0 =&gt; &apos;blue&apos;, 1 =&gt; &apos;red&apos;, 2 =&gt; &apos;green&apos;, 3 =&gt; &apos;red&apos;,4=&gt;15);</span><br><span class="line">var_dump(array_search(&apos;15&apos;, $array,true));</span><br></pre></td></tr></table></figure><p>4）count（）：返回数组中元素的数目。         </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$array = array(0 =&gt; &apos;blue&apos;, 1 =&gt; &apos;red&apos;, 2 =&gt; &apos;green&apos;, 3 =&gt;   &apos;red&apos;,4=&gt;15);</span><br><span class="line">var_dump(count($array));</span><br></pre></td></tr></table></figure><p>5）in_array（）：检查数组中是否存在指定的值。        </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$os = array(&quot;Mac&quot;, &quot;NT&quot;, &quot;Irix&quot;, &quot;Linux&quot;);</span><br><span class="line">var_dump(in_array(&apos;Mac&apos;, $os));</span><br></pre></td></tr></table></figure><p>6）list（）：把数组中的值赋给一些变量。        </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$arr=array(60,80,100);</span><br><span class="line">list($xiaoqiang,$xiaohong,$xiaoming)=array(60,80,100);</span><br><span class="line">echo $xiaoqiang;</span><br></pre></td></tr></table></figure><p>7）asort<br>（）：对关联数组按照键值进行升序排序。        </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$students=array(</span><br><span class="line">&apos;xiaoming&apos;=&gt;60,</span><br><span class="line">&apos;xiaohong&apos;=&gt;80,</span><br><span class="line">&apos;xiaoqiang&apos;=&gt;100,</span><br><span class="line">&apos;xiaowang&apos;=&gt;90</span><br><span class="line">);</span><br><span class="line">asort($students);</span><br><span class="line">print_r($students);</span><br></pre></td></tr></table></figure><p>直接对数组里面的数据进行排序，第二个参数</p><p>SORT_REGULAR - 正常比较单元（不改变类型） </p><p>SORT_NUMERIC - 单元被作为数字来比较 </p><p>SORT_STRING - 单元被作为字符串来比较</p><p>SORT_LOCALE_STRING - 根据当前的区域（locale）设置来把单元当作字符串比较。</p><p>8）array_filter（）：用回调函数过滤数组中的元素。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">function odd($var)</span><br><span class="line">&#123;</span><br><span class="line">return($var % 2 == 1);</span><br><span class="line">&#125;</span><br><span class="line">function even($var)</span><br><span class="line">&#123;</span><br><span class="line">return($var % 2 == 0);</span><br><span class="line">&#125;</span><br><span class="line">$array1 = array(&quot;a&quot;=&gt;1, &quot;b&quot;=&gt;2, &quot;c&quot;=&gt;3, &quot;d&quot;=&gt;4, &quot;e&quot;=&gt;5);</span><br><span class="line">$array2 = array(6, 7, 8, 9, 10, 11, 12);</span><br><span class="line">echo &quot;Odd :\n&quot;;</span><br><span class="line">print_r(array_filter($array1, &quot;odd&quot;));</span><br><span class="line">echo &quot;Even:\n&quot;;</span><br><span class="line">print_r(array_filter($array2, &quot;even&quot;));</span><br></pre></td></tr></table></figure><h4 id="9-字符串处理"><a href="#9-字符串处理" class="headerlink" title="9.字符串处理"></a>9.字符串处理</h4><p><a href="http://www.w3school.com.cn/php/php_ref_string.asp" target="_blank" rel="noopener">字符串函数</a> 部分函数举例：</p><p>1）去除空白或其他字符函数</p><p>trim（）：移除字符串两侧的空白字符和其他字符。        </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$str=&apos;    abc   &apos;;</span><br><span class="line">var_dump($str);</span><br><span class="line">var_dump(trim($str));</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$str=&apos;abcabcdefac&apos;;</span><br><span class="line">var_dump($str);</span><br><span class="line">var_dump(trim($str,&apos;bac&apos;));//如果要去除多个字符可以连着写！</span><br></pre></td></tr></table></figure><p>另外：ltrim（）函数可以移除字符串左侧的空白字符或其他字符，rtrim（）函数可以移除字符串右侧的空白字符或其他字符，用法和trim相同。</p><p>2）大小写转换函数</p><p>strtoupper：把字符串转换为大写字母。strtolower：把字符串转换为小写字母。</p><p>例：echo strtoupper（”Hello WoRLD!”）；</p><p>3）字符串查找函数</p><p>substr_count<br>（）：计算子串在字符串中出现的次数。        </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$str=&apos;testteste&apos;;</span><br><span class="line">var_dump(substr_count($str,&apos;te&apos;));</span><br><span class="line">$text2 = &apos;gcdgcdgcd&apos;;</span><br><span class="line">echo substr_count($text2, &apos;gcdgcd&apos;);</span><br><span class="line">$str=&apos;testteste&apos;;</span><br><span class="line">var_dump(substr_count($str,&apos;te&apos;,1,8));//不能超出字符串</span><br></pre></td></tr></table></figure><p>strpos（）：返回字符串在另一字符串中第一次出现的位置（对大小写敏感）。    </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$str=&apos;testteste&apos;;</span><br><span class="line">var_dump(strpos($str,&apos;t1&apos;));</span><br><span class="line">if(strpos($str, &apos;t&apos;)===false)&#123;</span><br><span class="line">echo &apos;没找到！&apos;;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">echo &apos;找到啦!&apos;;</span><br><span class="line">&#125;</span><br><span class="line">$str=&apos;testteste&apos;;</span><br><span class="line">var_dump(strpos($str,&apos;t&apos;,1));</span><br></pre></td></tr></table></figure><p>strstr（）：查找字符串在另一字符串中的第一次出现（对大小写敏感）。     </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$str=&apos;testteste&apos;;</span><br><span class="line">var_dump($str);</span><br><span class="line">var_dump(strstr($str,&apos;s&apos;));</span><br><span class="line">var_dump(strstr($str,&apos;s&apos;,true));</span><br></pre></td></tr></table></figure><p>4）字符串替换函数</p><p>str_replace（）：替换字符串中的一些字符（对大小写敏感）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$str=array(</span><br><span class="line">&apos;abc123abc&apos;,</span><br><span class="line">&apos;123abcabc&apos;,</span><br><span class="line">&apos;abcab123c&apos;</span><br><span class="line">);</span><br><span class="line">var_dump($str);</span><br><span class="line">echo &apos;&lt;br&gt;&apos;;</span><br><span class="line">$str1=str_replace(array(&apos;1&apos;,&apos;2&apos;,&apos;3&apos;),array(&apos;一&apos;,&apos;二&apos;,&apos;三&apos;),$str,$count);</span><br><span class="line">echo $count.&apos;&lt;br&gt;&apos;;</span><br><span class="line">var_dump($str1);</span><br></pre></td></tr></table></figure><p>5）与html标签相关的函数</p><p>htmlspecialchars（）：把一些预定义的字符转换为 HTML 实体。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$str=&lt;&lt;&lt;START</span><br><span class="line">&lt;p style=&quot;color:red;font-size:128px;&quot;&gt;嘻嘻嘻&lt;/p&gt;</span><br><span class="line">START;</span><br><span class="line">echo $str;</span><br><span class="line">echo &quot;\n&quot;;</span><br><span class="line">echo htmlspecialchars($str);</span><br></pre></td></tr></table></figure><p>strip_tags（）：剥去字符串中的 HTML 和 PHP 标签。        </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$str=&lt;&lt;&lt;START</span><br><span class="line">&lt;p style=&quot;color:red;font-size:128px;&quot;&gt;嘻嘻嘻&lt;/p&gt;</span><br><span class="line">&lt;div style=&quot;color:red;&quot;&gt;流年、乱了浮生&lt;/div&gt;</span><br><span class="line">START;</span><br><span class="line">echo $str;</span><br><span class="line">echo &quot;\n&quot;;</span><br><span class="line">echo strip_tags($str,&quot;&lt;div&gt;&lt;p&gt;&quot;);</span><br></pre></td></tr></table></figure><p>6）字符串截取函数</p><p>substr（）：返回字符串的一部分。        </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$str=&apos;testdqwdwqdwqdqdwq&apos;;</span><br><span class="line">echo substr($str,3,2);</span><br><span class="line">$str=&apos;test&apos;;</span><br><span class="line">echo substr($str,-3,2);</span><br></pre></td></tr></table></figure><p>7）字符串分隔函数</p><p>explode（）：把字符串打散为数组。        </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$str=&apos;test,test1,test2,test3&apos;;</span><br><span class="line">var_dump(explode(&apos;,&apos;,$str,2));</span><br></pre></td></tr></table></figure><p>str_split（）：把字符串分割到数组中。    </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$str=&apos;test&apos;;</span><br><span class="line">var_dump(str_split($str,3));</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;1-函数（一）：自定义函数&quot;&gt;&lt;a href=&quot;#1-函数（一）：自定义函数&quot; class=&quot;headerlink&quot; title=&quot;1.函数（一）：自定义函数&quot;&gt;&lt;/a&gt;1.函数（一）：自定义函数&lt;/h4&gt;&lt;p&gt;1）基本格式：&lt;/p&gt;
&lt;p&gt;function&amp;nbsp;函数名（参数1，…，参数n[可以省略]）{&lt;br&gt;        函数体；//任何有效的PHP代码&lt;br&gt;        return&amp;nbsp;值；//也可以不返回值&lt;br&gt;    }&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>PHP基本语法与流程控制</title>
    <link href="http://yoursite.com/2019/04/05/PHP%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95%E4%B8%8E%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/"/>
    <id>http://yoursite.com/2019/04/05/PHP基本语法与流程控制/</id>
    <published>2019-04-05T01:47:55.000Z</published>
    <updated>2019-04-06T09:02:47.255Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-PHP概述"><a href="#1-PHP概述" class="headerlink" title="1.PHP概述"></a>1.PHP概述</h4><p>PHP语法借鉴吸收了C语言、java和Perl等流行计算机语言的特点。PHP主要目标是允许网络开发人员快速编写动态页面，简单说PHP主要用于开发各种类型的网站程序。PHP是脚本语言不需要事先编译，在服务器端运行。PHP可以运行在windows、Linux等各种操作系统上。<a id="more"></a></p><h4 id="2-PHP基本语法（一）：初识PHP脚本程序"><a href="#2-PHP基本语法（一）：初识PHP脚本程序" class="headerlink" title="2.PHP基本语法（一）：初识PHP脚本程序"></a>2.PHP基本语法（一）：初识PHP脚本程序</h4><p>PHP语言标记：开始标记：&lt; ?php&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;结束标记：?&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;输出：echo </p><p>PHP代码可以嵌入到html代码中任何位置，并且可以嵌入任意多个，代码末尾的?&gt;结束标记可以省略。一些PHP语句的结尾要加上；表示一句话的结束，结束标记?&gt;就隐含了一个；所以在?&gt;之前紧挨着的PHP语句可以省略；。</p><p>注释：/*&nbsp;&nbsp; */多行注释&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//单行注释</p><p>空格、制表符、换行这些在PHP中不会显示，可适当利用增加代码可读性。</p><h4 id="3-PHP基本语法（二）：变量、变量类型和常量"><a href="#3-PHP基本语法（二）：变量、变量类型和常量" class="headerlink" title="3.PHP基本语法（二）：变量、变量类型和常量"></a>3.PHP基本语法（二）：变量、变量类型和常量</h4><p>1）变量：是用于临时储存值的容器，PHP在使用变量前不需要事先声明变量，一旦设置了某个变量，就可以在脚本中重复去使用它。</p><p>格式：$变量名=值    unset（变量名称）函数 释放（删除）指定的变量</p><p>变量的命名规则：变量名严格区分大小写，<strong>变量名只能包含字母、数字、下划线并且必须以字母或下划线开头</strong>，最好不要用关键字（如：if、and等）作为变量名称。</p><p>变量的引用赋值：例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$；a=10；$b=$a；echo $b；//此时输出:10</span><br><span class="line">$；a=10；$b=&amp;$a；$b=20；echo $a；//此时输出:20</span><br></pre></td></tr></table></figure><p>2）变量类型：是指保存在该变量中的数据类型，具有相同类型的数据才能被彼此相互操作，也不需要事先声明，变量或常量的数据类型由程序的上下文决定</p><p>使用var_dump（变量名）可以输出变量的类型。</p><p>（1）bool（布尔型）：最简单的类型，变量里存ture和false，如：$a=true;</p><p>（2）int（整型）：变量里存整数，如：$a=1;</p><p>（3）float（浮点型，也称double）：变量里存小数，如：$a=1.1;</p><p>（4）string（字符型）：如：$a=’测试’，字符串可以用单引号、双引号、定界符三种方法来定义</p><p>单引号：单引号中的字符串中不能再包含字符串，如果要用单引号需要用反斜杠（\）转义。PHP不会解析单引号中的变量，所以在定义简单字符串没有特别要求的时候，应使用单引号定义字符串！</p><p>双引号：PHP会解析双引号中的变量名，在双引号中使用变量时需使用{}括起来如:$a=”abc{$b}text….”，不括起来解析变量时会从$开始一直往后读，就会导致报错。</p><p>定界符：&lt;&lt;&lt;之后跟一个标识符（自己命名，命名规则同变量命名规则）开始，然后是字符串内容，最后是同样的标识符表示结束，结束标识符后必须接；例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$a=&lt;&lt;&lt;abc</span><br><span class="line">t&#123;$b&#125;est123...</span><br><span class="line">abc;</span><br></pre></td></tr></table></figure><p>定界符中写入变量时与双引号情况相同，定界符中字符串中可以使用单引号、双引号。</p><p>（5）array（数组）（6）object（对象）（7）resource（资源）这三种暂时先不写，之后再写。</p><p>（8）NULL（空）：将变量直接赋值为null；声明的变量未被赋值；被unset（）函数删除的变量，这三种情况就是空类型。</p><p>3）变量类型相互转换</p><p>自动类型转换：这种是程序运行中不太可控的部分所以在编写代码是不要涉及，不能给自己挖坑是吧。</p><p>强制类型转换：在要转换的变量之前加上括号括起来目标类型如：$b=（int）\$a;这种也用的少尽量不用</p><p>4）常量</p><p>定义：define（’常量名’，值）或者define（”常量名”，值） </p><p>命名：规则和变量相同，也遵循PHP标识的名称规则，按照惯例常量标识符总是大写的，例：define（’TEST’，’测试’），自己定义的常量严格区分大小写。</p><p>特点：常量不能通过赋值语句定义，只能用define（）函数定义； 常量一旦被定义就不能被重新定义或者取消定义；常量的值只能是bool、int、float、string类型。</p><p>预定义常量：其中有些以_开头的，这些预定义常量又叫<a href="https://www.php.net/manual/zh/language.constants.predefined.php" target="_blank" rel="noopener">魔术常量</a>，预定义常量不区分大小写。</p><h4 id="4-PHP基本语法（三）：运算符"><a href="#4-PHP基本语法（三）：运算符" class="headerlink" title="4.PHP基本语法（三）：运算符"></a>4.PHP基本语法（三）：运算符</h4><p>定义：运算符就是对一个或多个操作数（变量或数值）执行某种运算的符号，也称操作符。例：！true、$a + $b、true ？ 1:0，其中！、+、？、：这些就是运算符，其他就叫操作数，根据操作数的个数分为一元运算符、二元运算符、三元运算符。</p><p>1）算术运算符</p><p>​    +：加法；-：取反或减法；*：乘法；/：除法；%：取模</p><p>​    ++：自增：++$a&nbsp;先加一再赋值，$a++&nbsp;先赋值再加一；–：自减：和++相同，自增自减    是对变量而言的。</p><p>2）字符串运算符：只有一个（.）链接运算符，将两个字符串连接起来，例：$a.$b；</p><p>3）赋值运算符（=）：=左边必须是变量，右边可以是一个<a href="https://www.php.net/manual/zh/language.expressions.php" target="_blank" rel="noopener">表达式</a>，也可以是值或一个变量，将右边的值赋给左边的变量。</p><p>其他形式：+=：例：$a+=$b，等同于（$a=$a+$b），&nbsp;-=、/=、*=、%=&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;同理。</p><p>4）比较运算符：对操作数按照比较运算符的规则进行比较，比较出的结果如果满足规则结果就是true，否则就是false。</p><p>==：是否相等；===：全等（值相等类型也相等）；！=：是否不相等；&lt;&gt;：同！=</p><p>！==：不全等；&nbsp;&nbsp;&nbsp;&lt;：小于；&nbsp;&nbsp;&nbsp;&gt;：大于；&nbsp;&nbsp;&nbsp;&lt;=：小于等于；&nbsp;&nbsp;&nbsp;&gt;=：大于等于</p><p>5）逻辑运算符：与比较运算符相似，满足结果输出true，否则输出false。</p><p>逻辑与（and&nbsp;或&nbsp;&amp;&amp;）：左右两边表达式值都为true时输出true，否则输出false。</p><p>逻辑或（or&nbsp;或&nbsp;&nbsp;||）：左右两边表达式值一个为true，就输出true。</p><p>逻辑亦或（xor）：左右不一样输出true，一样输出false。</p><p>逻辑非（！）：否定当前值。</p><p>6）位运算符：主要用于网站开发，在PHP中用的很少，这里就不写了。</p><p>7）其他运算符</p><p>?&nbsp;:：&nbsp;格式：表达式1？表达式2：表达式3；，如果表达式1的值为true就执行表达式2，表达式1的值为false就执行表达式3</p><p>‘&nbsp;&nbsp;’：可以把系统的命令放在里面执行，例：$a=’ipconfig’；，涉及跨平台。</p><p>@：屏蔽表达式可能发生的错误，例：echo&nbsp;@$a；</p><p>=&gt;、-&gt;、instanceof&nbsp;面向数组和对象使用，之后再写。</p><p>8）运算符的优先级：<a href="https://www.php.net/manual/zh/language.operators.precedence.php" target="_blank" rel="noopener">详情点这里</a> </p><p>优先级归纳：[结合方向（从哪个方向算）]运算符，由高到低（有括号先算括号内的，括号内看成一个整体）：</p><p>[无]递增++递减–、[右]逻辑非！、[左]乘*&nbsp;除/&nbsp;取余%、[左]加&nbsp;减&nbsp;字符串连接符、[无]包含大于号或者小于号的比较运算符、[无]不包含大于号或者小于号的比较运算符、[左]逻辑与&amp;&amp;、[左]逻辑或||、[左]？：、[右]赋值运算符、[左]逻辑亦或xor</p><h4 id="5-流程控制（一）：if语句"><a href="#5-流程控制（一）：if语句" class="headerlink" title="5.流程控制（一）：if语句"></a>5.流程控制（一）：if语句</h4><p>例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$a=91;</span><br><span class="line">$grade1=60;</span><br><span class="line">$grade2=75;</span><br><span class="line">$grade3=85;</span><br><span class="line">if($a&lt;$grade1)&#123;</span><br><span class="line">    echo&apos;不及格&apos;;</span><br><span class="line">&#125;</span><br><span class="line">elseif($a&lt;$grade2)&#123;</span><br><span class="line">    echo&apos;及格&apos;;</span><br><span class="line">&#125;</span><br><span class="line">elseif($a&lt;$grade3)&#123;</span><br><span class="line">echo&apos;良好&apos;;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    echo&apos;优秀&apos;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;//最终输出优秀</span><br></pre></td></tr></table></figure><p>if、elseif、else等可相互嵌套，可以根据实际情况改变灵活运用，比较简单敲几遍就会了，与C语言语法一样。</p><h4 id="6-流程控制（二）：switch语句"><a href="#6-流程控制（二）：switch语句" class="headerlink" title="6.流程控制（二）：switch语句"></a>6.流程控制（二）：switch语句</h4><p>例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$a=3;</span><br><span class="line">switch($a)&#123;//括号内是表达式</span><br><span class="line">    case 1://case相当于==，与括号内表达式的值比较</span><br><span class="line">    echo&apos;今天星期一&apos;;</span><br><span class="line">    break;//跳出的意思，结束此次switch</span><br><span class="line">    case 2:</span><br><span class="line">    echo&apos;今天星期二&apos;;</span><br><span class="line">    break;</span><br><span class="line">    case 2:</span><br><span class="line">    echo&apos;今天星期二&apos;;</span><br><span class="line">    break;</span><br><span class="line">    case 3:</span><br><span class="line">    echo&apos;今天星期三&apos;;</span><br><span class="line">    break;</span><br><span class="line">    case 4:</span><br><span class="line">    echo&apos;今天星期四&apos;;</span><br><span class="line">    break;</span><br><span class="line">    case 5:</span><br><span class="line">    echo&apos;今天星期五&apos;;</span><br><span class="line">    break;</span><br><span class="line">    case 6:</span><br><span class="line">    echo&apos;今天星期六&apos;;</span><br><span class="line">    break;</span><br><span class="line">    case 7:</span><br><span class="line">    echo&apos;今天星期日&apos;;</span><br><span class="line">    break;</span><br><span class="line">    default:</span><br><span class="line">    echo&apos;无法匹配&apos;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;//最终输出今天星期三</span><br></pre></td></tr></table></figure><p>注：表达式的值最好是整型或者字符串；不能漏掉break；如果某个case语句后面没有接任何语句块，那么就说明这个语句块内容同下；case后面的语句块不需要用{}括起来。</p><h4 id="7-流程控制（三）：循环语句"><a href="#7-流程控制（三）：循环语句" class="headerlink" title="7.流程控制（三）：循环语句"></a>7.流程控制（三）：循环语句</h4><p>1）while循环：while（表达式）{各种语句……}，当表达式值为true执行大括号内语句块，语句块执行结束后返回上面继续判断表达式值是true还是false，按此循环，当值为false时while语句结束，例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$a=1;</span><br><span class="line">while($a&lt;5)&#123;</span><br><span class="line">    $a++;</span><br><span class="line">    echo $a.&apos;&lt;br /&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;//最终输出2、3、4、5</span><br></pre></td></tr></table></figure><p>2）do…while循环：do{各种语句}while(表达式);，与while语句不同的是do…while语句至少要执行一次，例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$a=1;</span><br><span class="line">do&#123;</span><br><span class="line">    $a++;</span><br><span class="line">    echo $a.&apos;&lt;br /&gt;&apos;;</span><br><span class="line">&#125;while($a&lt;5);</span><br><span class="line">?&gt;//最终输出2、3、4、5</span><br></pre></td></tr></table></figure><p>3）for循环 ：for(表达式1;表达式2;表达式3){各种语句}，表达式1放初始化语句如：$a=0，表达式2放判断语句，表达式3放对初始化自增或自减的语句，三个表达式位置可以放多个表达式中间用逗号隔开。例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">for($i=1;$i&lt;5;$i++)&#123;</span><br><span class="line">    echo $i.&apos;&lt;br /&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;//最终输出1、2、3、4</span><br></pre></td></tr></table></figure><h4 id="8-流程控制（四）：特殊的流程控制语句"><a href="#8-流程控制（四）：特殊的流程控制语句" class="headerlink" title="8.流程控制（四）：特殊的流程控制语句"></a>8.流程控制（四）：特殊的流程控制语句</h4><p>1）break语句：用于switch、for、while、do…while、foreach等语句，用于<strong>中断当前语句</strong>，例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">for($i=1;$i&lt;5;$i++)&#123;</span><br><span class="line">if($i==3)&#123;</span><br><span class="line">        break;//中断本次循环</span><br><span class="line">&#125;</span><br><span class="line">    echo $i.&apos;&lt;br /&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;//最终输出1、2</span><br></pre></td></tr></table></figure><p>2）continue语句：只用于循环语句，<strong>跳出本次循环</strong>，例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">for($i=1;$i&lt;5;$i++)&#123;</span><br><span class="line">if($i==3)&#123;</span><br><span class="line">        continue;//跳出本次循环</span><br><span class="line">&#125;</span><br><span class="line">    echo $i.&apos;&lt;br /&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;//最终输出1、2、4</span><br></pre></td></tr></table></figure><p>3）exit（）语句：结束整个程序的执行，括号内可以写字符串用作提示。例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">echo&apos;星期一&lt;br /&gt;&apos;;</span><br><span class="line">exit(&apos;程序结束！&apos;);</span><br><span class="line">echo&apos;星期二&lt;br /&gt;&apos;;</span><br><span class="line">echo&apos;星期三&lt;br /&gt;&apos;;</span><br><span class="line">echo&apos;星期四&lt;br /&gt;&apos;;</span><br><span class="line">echo&apos;星期五&lt;br /&gt;&apos;;</span><br><span class="line">?&gt;//最终输出星期一、程序结束！</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;1-PHP概述&quot;&gt;&lt;a href=&quot;#1-PHP概述&quot; class=&quot;headerlink&quot; title=&quot;1.PHP概述&quot;&gt;&lt;/a&gt;1.PHP概述&lt;/h4&gt;&lt;p&gt;PHP语法借鉴吸收了C语言、java和Perl等流行计算机语言的特点。PHP主要目标是允许网络开发人员快速编写动态页面，简单说PHP主要用于开发各种类型的网站程序。PHP是脚本语言不需要事先编译，在服务器端运行。PHP可以运行在windows、Linux等各种操作系统上。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>css知识总结</title>
    <link href="http://yoursite.com/2019/03/30/css%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2019/03/30/css知识总结/</id>
    <published>2019-03-30T09:05:48.000Z</published>
    <updated>2019-04-05T16:28:48.679Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-CSS定义和三种引用方式"><a href="#1-CSS定义和三种引用方式" class="headerlink" title="1.CSS定义和三种引用方式"></a>1.CSS定义和三种引用方式</h4><p>​    CSS全称为“层叠样式表 (Cascading Style Sheets)”，作用是为html元素去定义样式能够实现内容与表现相分离，提高代码的可重用性和可维护性。使用CSS样式的可以通过定义某个样式，使网页不同位置的文字有着统一的字体、字号或者颜色等。 一个完整的页面 = HTML + CSS，HTML显示页面内容，CSS构建HTML样式。<a id="more"></a></p><p>​    CSS引用方式有三种：行内样式、内部样式表、外部样式表</p><p>​    1）行内样式： 使用style属性在HTML元素中引入CSS样式（只能控制某一个元素的显示效果)</p><p>​    例：&lt; p  style=”font-size：10px；color：red；”&gt;&lt;/ p&gt; </p><p>​    2）内部样式表： 将样式放在&lt; style&gt;标签中，&lt; style&gt;标签写在&lt; head&gt;标签中    </p><p>​    例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">  &lt;title&gt;内部样式表&lt;/title&gt;</span><br><span class="line">  &lt;style&gt;</span><br><span class="line">    div&#123;</span><br><span class="line">        color: red;</span><br><span class="line">        width: 500px;</span><br><span class="line">        background: yellow;</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div&gt;梨&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>3）外部样式表： <strong>将CSS代码保存在以.css结尾的css样式文件中，再进行引用</strong></p><p>​    用法：在&lt; head&gt;&lt;/ head&gt;中写以下代码：&lt; link rel=”stylesheet” type=”text/css” href=”链接的css文件地址” /&gt;（这是一种常用的方式）</p><p>​    例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">  &lt;title&gt;外部样式表&lt;/title&gt;</span><br><span class="line">  &lt;link rel=&quot;stylesheet&quot; href=&quot;1.css&quot;&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div&gt;梨&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>​    特点：实现内容与表现相分离；将可重用性和可维护性体现的最完美(所有的页面都能用)；可以在整个网站乃至于互联网中做通用的样式定义。</p><p>​    <strong>样式优先级：行内样式 &gt; 内部样式表 &gt; 外部样式表</strong>    </p><p>​    内部样式表 或 外部样式表，级别处于中间位置；就近原则（谁靠下，以谁为主）。</p><h4 id="2-CSS语法"><a href="#2-CSS语法" class="headerlink" title="2.CSS语法"></a>2.CSS语法</h4><p>&nbsp;基本语法： 样式声明：属性：值；&nbsp;&nbsp;&nbsp;样式规则：选择器 和 样式声明</p><p>​    特征：1）继承性：大部分的CSS样式属性，是可以被继承的。继承：子级不用单独定义样式，可以直接使用父级的东西。2）层叠性：为一个元素定义多个样式的时候，样式不冲突时，多个样式表中的样式可以层叠(合并)为一个。3）优先级：样式冲突时，按照不同样式规则的优先级来应用样式。</p><p>​    rgb色彩模式：R  红色；G  绿色；B  蓝色    例：color： rgb（255，0，0）  或  rgb（100%，%0，%0）； 颜色单位：#rrggbb；每一位取0~9，例：#0123456</p><h4 id="3-CSS选择器"><a href="#3-CSS选择器" class="headerlink" title="3.CSS选择器"></a>3.CSS选择器</h4><p>​    1）通用选择器 作用：匹配页面中的任何一个元素 语法：* {样式规则}</p><p>​    2）元素选择器 作用:匹配页面中的指定的元素； 语法：元素名称作为选择器，如： body、p等。</p><p>​    3）类选择器  作用：定义公共的样式，由任意一个标签进行引用</p><p>​        语法：.className{ ：； } 例：.red_back{ } .red_back{ }</p><p>​        引用：在标签中，通过class属性 对类选择器名称进行引用</p><p>​        注意：在一个元素中，可以同时对多个类选择器进行引用。多个类选择器之间用空格隔开。</p><p>​    4）类选择器-分类选择器</p><p>​        作用：将类选择器和元素选择器结合起来使用，从而实现对某种元素不同样式的细分控制</p><p>​        语法：元素选择器 .className { } 例：div.red_back{ }</p><p>​    5）id选择器</p><p>​        作用：通过元素的id值，来声明定义元素的相关样式属性 语法：#idValue{ }</p><p>​    6）群组选择器</p><p>​        作用：选择器声明，是以 , 隔开的选择器列表</p><p>​        语法：selector1，selector2，selector3，selector4…{ } 例：div，p，.redback{color：red；}</p><p>​    7）后代、子代选择器</p><p>​        只存在一级的父子关系：可以称之为子代或者后代</p><p>​        多于一级的嵌套关系：只能称之为后代 后代语法：selector1 selector2{ }</p><p>​        例：div span{ } /<em> 匹配出所有div元素中的span元素 </em>/ #content .redBack{ }</p><p>​        子代作用：只能匹配出父子关系的子级元素</p><p>​        目的：不希望选择任意的后代元素，而是希望缩小范围，只选择某个具体的子元素时使用。 </p><p>​        语法：selector1&gt;selector2{ }</p><p>​    8）伪类选择器作用：匹配元素的不同状态   语法：：作为开始的</p><p>​        分类：<br>​        链接伪类 作用：只匹配超链接的状态<br>​        ：link：适用于尚未访问的超链接 ：visited：适用于访问过后的超链接<br>​        动态伪类<br>​        ：hover：适用于鼠标悬停在html元素上的状态<br>​        ：active：适用于html元素被激活时<br>​        ：focus：适用于html元素获取焦点时的状态</p><p>​        此外还有目标伪类、元素状态伪类、结构伪类、否定伪类。详细的伪类选择器可以参考链接：<a href="https://blog.csdn.net/Panda_m/article/details/50084699" target="_blank" rel="noopener">https://blog.csdn.net/Panda_m/article/details/50084699</a></p><h4 id="4-CSS背景"><a href="#4-CSS背景" class="headerlink" title="4.CSS背景"></a>4.CSS背景</h4><p>​    1）背景颜色：background-color：red（或颜色单位）；</p><p>​    2）背景图片：例：background-image：url(“1.png”)；</p><p>​    3）背景平铺：background-repeat：值</p><p>​        取值：repeat ：即水平方向又垂直方向平铺(默认值)；no-repeat ： 没有平铺；repeat-x ：     仅水平方向平铺；repeat-y ：仅垂直方向平铺 </p><p>​    4）背景固定：background-attachment：值</p><p>​        默认情况，背景图片会随着滚动条而发生滚动，可以通过背景图片固定的方式解决此问题，    让背景图保持在网页的可视化窗口的某个固定为止处不随着滚动条发生位置变化。</p><p>​        注意：尽量将背景图片加给body元素</p><p>​        取值：scroll ：背景会随滚动条发生滚动（默认值）；fixed ：固定，背景不会随着内容而发    生滚动。</p><p>​    5）背景定位：background-position：x值 y值；</p><p>​        取值：x  y ：x水平偏移位置,值为正 向右移动，值为负，向左移动<br>​        y垂直偏移位置，值为正 向下移动，值为负，向上移动<br>​        x%  y% ： 左上角 ： 0% 0%； 右下角 ：100% 100%； 居中显示 ： 50% 50%<br>​        关键字：x ：left，center，right ； y ： top，center，bottom</p><p>​    6）背景属性：将以上几个属性全部综合到一起,通过一个属性描述所有的值</p><p>​        属性:background：值；   取值：color  url()  repeat  attachment  position；例：backgroud：url（”1.png”） repeat-y；</p><h4 id="5-CSS文本格式化"><a href="#5-CSS文本格式化" class="headerlink" title="5.CSS文本格式化"></a>5.CSS文本格式化</h4><p>​    字体样式：例：font-family：”宋体”； 字体大小：font-size：16px（默认）；</p><p>​    字体加粗：font-weight：bold；（相当于&lt; b&gt; &lt;/ b&gt;）；字体样式：font-style：italic；（斜体）</p><p>​    字体属性：font：font-style font-variant font-weight font-size font-family；常用设置方式：font：12px “微软雅黑”；</p><p>​    文本颜色：color：red； </p><p>​    字符间距：letter-spacing： 0px（默认）；空格距离：word-spacing：0px（默认）；</p><p>​    文字线条修饰 属性：text-decoration：值；  取值：none 无线条、underline 下划线、overline 上划线、line-through 删除线</p><p>​    文本对齐：text-align：left（默认）、 right 、center、justify（两边对齐）；</p><p>​    文本缩进：text-indent 2px； 行高：line-height 3px；</p><p>​    英文大小写：text-transform：uppercase（全大写）、lowercase（全小写）、capitalize（首字母大写）；</p><h4 id="6-CSS链接和列表"><a href="#6-CSS链接和列表" class="headerlink" title="6.CSS链接和列表"></a>6.CSS链接和列表</h4><p>​    1）链接</p><p>​        a：link  初始状态；a：visited  已访问过；a：hover  鼠标放在链接上时；a：active  链接被    点击时</p><p>​        注意：a：hover 必须跟在 a：link 和 a：visited后面，a：active 必须跟在 a：hover后面</p><p>​        还可以添加状态例如：a：hover{  color：red； font-size：30px；} </p><p>​    2）列表</p><p>​        列表项标志：list-style-type：值； 取值：none 无标记（常用）、disc 实心圆、circle 空心    圆、square 实心方块……</p><p>​        列表项图像：list-style-image：值； 取值：url(图像路径)；功能：使用自定义图像，作为列    表项的显示标识</p><p>​        列表项位置：list-style-position：值；取值：outside：列表项标识位于文本之外（默认）；     inside：列表项标识更改在文本范围之内</p><h4 id="7-CSS盒子模型"><a href="#7-CSS盒子模型" class="headerlink" title="7.CSS盒子模型"></a>7.CSS盒子模型</h4><p>​    外边框：border：5px solid（实线） black；</p><p>​    内边距：padding：20px（上下） 50px（左右）；padding：20px 30px 40px 50px；（顺时针，上右下左）</p><p>​    外边距：margin：30px；（与padding类似）</p><p>​    另外单边设置：margin-top：上外边距 ； margin-right：右外边距margin-bottom：下外边距 ； margin-left：左外边距</p><p>​    边框合并：border-collapse：值；取值：separate 分离边框（默认）、collapse 合并边框</p><p>​    更详细盒子模型，可以参考链接：<a href="https://www.cnblogs.com/clearsky/p/5696286.html" target="_blank" rel="noopener">https://www.cnblogs.com/clearsky/p/5696286.html</a></p><h4 id="8-CSS布局与定位"><a href="#8-CSS布局与定位" class="headerlink" title="8.CSS布局与定位"></a>8.CSS布局与定位</h4><p>​    可以参考链接：<a href="https://blog.csdn.net/weixin_38902950/article/details/84674199" target="_blank" rel="noopener">https://blog.csdn.net/weixin_38902950/article/details/84674199</a></p><h4 id="9-总结"><a href="#9-总结" class="headerlink" title="9.总结"></a>9.总结</h4><p>​    CSS中选择器、盒模型、布局与定位是最重要的几部分，想深入了解可以多找几篇文章看看，本人是初学者所以这几部分就没有详细写。</p><p><strong>本文参考的链接：</strong><a href="https://www.cnblogs.com/wangdongdong1234/p/6394510.html" target="_blank" rel="noopener">https://www.cnblogs.com/wangdongdong1234/p/6394510.html</a></p><p><strong>参考视频：</strong><a href="https://www.bilibili.com/video/av26764447/?p=16" target="_blank" rel="noopener">https://www.bilibili.com/video/av26764447/?p=16</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;1-CSS定义和三种引用方式&quot;&gt;&lt;a href=&quot;#1-CSS定义和三种引用方式&quot; class=&quot;headerlink&quot; title=&quot;1.CSS定义和三种引用方式&quot;&gt;&lt;/a&gt;1.CSS定义和三种引用方式&lt;/h4&gt;&lt;p&gt;​    CSS全称为“层叠样式表 (Cascading Style Sheets)”，作用是为html元素去定义样式能够实现内容与表现相分离，提高代码的可重用性和可维护性。使用CSS样式的可以通过定义某个样式，使网页不同位置的文字有着统一的字体、字号或者颜色等。 一个完整的页面 = HTML + CSS，HTML显示页面内容，CSS构建HTML样式。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>html 知识总结</title>
    <link href="http://yoursite.com/2019/03/27/html%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2019/03/27/html知识总结/</id>
    <published>2019-03-27T11:31:36.000Z</published>
    <updated>2019-04-05T17:00:43.915Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-基本结构"><a href="#1-基本结构" class="headerlink" title="1.基本结构"></a>1.基本结构</h4><p>&lt; !DOCTYPE html&gt;//声明文档的解析类型，必须写在第一行<br>&lt; html&gt;//根标签(开始)<br>&lt; head&gt;//头标签(开始)<a id="more"></a><br>&lt; meta charset=”utf-8”&gt;//声明为utf-8编码，避免出现乱码<br>&lt; title&gt;html+css&lt;/ title&gt;//页面标题标签&lt;/ head&gt;//头标签(结束)<br>&lt; body&gt;//主体标签(开始)&lt; h1&gt;我的标题&lt;/ h1&gt;//内容标题标签&lt; p&gt;我的段落。&lt;/ p&gt;//段落标签<br>&lt;/ body&gt;//主体标签(结束)<br>&lt;/ html&gt;//根标签(结束)<br>注：:HTML中不支持 空格、回车、制表符，它们都会被解析成一个空白字符。</p><h4 id="2-标签"><a href="#2-标签" class="headerlink" title="2.标签"></a>2.标签</h4><p>1）标签写法要用小写字母，由尖括号包围，成对出现的标签称为双标签不能忘记结束标签。单独出现的标签叫单标签，最好也要闭合，形式为&lt;标签名 /&gt;，例如&lt; br /&gt;(换行标签)。&lt; !DOCTYPE html&gt;不是标签，只是声明。从开始标签到结束标签所有代码就是HTML的元素，之间的内容叫元素内容。没有内容的 HTML 元素被称为空元素，空元素是在开始标签中关闭的，例如&lt; br /&gt;。<br>2）属性<br>  属性可以在元素中添加附加信息，属性一般描述于开始标签，属性总是以名称/值对的形式出现。例如&lt; a herf=” <a href="http://www.baidu.com" target="_blank" rel="noopener">http://www.baidu.com</a> “&gt; 百度一下&lt; /a&gt;，&lt; a&gt;为链接标签，herf是属性名称，双引号中是链接地址，称为属性值，属性和属性值，尽量小写，也可以自定义属性(不能使用中文)。<br>3）注释<br>  &lt; !– 注释的内容 –&gt;<br>4）水平线<br>  单标签：&lt; hr /&gt;可连续使用多个。<br>5）标题<br>  是通过&lt; h1&gt;-&lt; h6&gt;标签进行定义的，&lt; h1&gt;定义最大的标题。&lt; h6&gt;定义最小的标题。浏览器会自动地在标题的前后添加空行。<br>6）段落<br>  通过&lt; p&gt;标签定义，浏览器会自动地在段落的前后添加空行，如果在不产生一个新段落的情况下进行换行，须使用&lt; br /&gt;标签。<br>7）文本格式化(双标签)<br>  &lt; b&gt;定义粗体文字，&lt; i&gt;定义斜体字，&lt; small&gt;定义小号字，&lt; big&gt;定义大号字，&lt; strong&gt;定义加重语气。<br>8）链接<br>  使用&lt; a&gt;设置超文本链接，如&lt; a href=” <a href="http://www.baidu.com" target="_blank" rel="noopener">http://www.baidu.com</a> “&gt; 百度一下&lt; /a&gt;。<br>9）图像<br>  使用&lt; img&gt;标签，&lt; img border=”边框属性” src=”图片路径” alt=”为图像定义一串预备的可替换的文本” width=”图像宽度” height=”图像高度” &gt;<br>10）表格<br>  表格由 &lt; table&gt; 标签来定义。&lt; tr&gt;定义行，&lt; td&gt;定义表格数据，&lt; th&gt;定义表格表头，大多数浏览器会把表头显示为粗体居中的文本。写法：</p><p>&lt; table border=”1”&gt;<br>    &lt; tr&gt;<br>        &lt; th&gt;….&lt;/ th&gt;<br>        &lt; th&gt;…..&lt;/ th&gt;<br>    &lt;/ tr&gt;<br>    &lt; tr&gt;<br>        &lt; td&gt;…….&lt;/ td&gt;<br>        &lt; td&gt;………&lt;/ td&gt;<br>    &lt;/ tr&gt;<br>&lt;/ table&gt;</p><p>11）列表<br>  无序列表：&lt; ul&gt;&lt; li&gt;苹果&lt;/ li&gt;&lt; li&gt;梨&lt;/ li&gt;&lt;/ ul&gt;<br>  有序列表：&lt; ol&gt;&lt; li&gt;苹果&lt;/ li&gt;&lt; li&gt;梨&lt;/ li&gt;&lt;/ ol&gt;<br>12）表单<br>  使用&lt; form&gt;标签定义，输入标签为&lt; input&gt;，输入类型是由类型属性 type 定义的。例：</p><p>&lt; form action=”表单数据发送的地址”&gt;<br>User : &lt; input type=”text” name=”user”&gt;//文本域<br>Password: &lt; input type=”password” name=”password”&gt;//密码域<br>&lt; input type=”submit” value=”提交”&gt;//提交按钮<br>&lt;/ form&gt;</p><p>  单选按钮：&lt; input type=”radio”&gt; 标签定义了表单单选框选项。<br>  复选框：&lt; input type=”checkbox”&gt; 定义了复选框。</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;1-基本结构&quot;&gt;&lt;a href=&quot;#1-基本结构&quot; class=&quot;headerlink&quot; title=&quot;1.基本结构&quot;&gt;&lt;/a&gt;1.基本结构&lt;/h4&gt;&lt;p&gt;&amp;lt; !DOCTYPE html&amp;gt;//声明文档的解析类型，必须写在第一行&lt;br&gt;&amp;lt; html&amp;gt;//根标签(开始)&lt;br&gt;&amp;lt; head&amp;gt;//头标签(开始)&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>hexo搭建博客</title>
    <link href="http://yoursite.com/2019/03/27/hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2019/03/27/hexo搭建博客/</id>
    <published>2019-03-27T11:24:39.000Z</published>
    <updated>2019-04-05T16:29:12.848Z</updated>
    
    <content type="html"><![CDATA[<p>​    本人是学习网络安全的一个萌新，这是第一次写博客还不太熟练，以后会在博客分享记录自己在网络安全道路的学习经历。hexo+github搭建博客也是现在使用比较多、比较好用的方式了（当时学长就是推荐我们使用hexo搭建自己的博客），下面进入正题。<a id="more"></a></p><p>推荐链接：<a href="https://url.cn/5W2XCKI" target="_blank" rel="noopener">https://url.cn/5W2XCKI</a>   </p><p>照着这个一步一步来就可以初步搭好自己的博客了（我就是看的这个搭好了自己的博客）。其中有一点细节需要注意<img src="/2019/03/27/hexo搭建博客/QQ截图20190329213320.png" alt="1" title="1"></p><p>红线地方输入的时候不是一行，而是<img src="/2019/03/27/hexo搭建博客/20190329213924.png" alt="2" title="2"></p><p>这样自己博客就初步搭好了，后续就是配置、主题等操作了，这里也推荐一个博客：<a href="https://blog.csdn.net/wsmrzx/article/details/81478595" target="_blank" rel="noopener">https://blog.csdn.net/wsmrzx/article/details/81478595</a>  博主的hexo系列可以参考一下，当然也可以在网上找，也有很多的关于hexo+github搭建博客的文章。</p><h2 id="自己搭建过程中的一些想法"><a href="#自己搭建过程中的一些想法" class="headerlink" title="自己搭建过程中的一些想法"></a>自己搭建过程中的一些想法</h2><p>​    在搭建过程中可能会出现一些意外的错误，遇到意外错误可以把出现的错误代码直接复制下来，粘到百度去搜一下，发表一下自己的观点：搭建博客过程中或者学习其他东西遇到错误，一般都是一些小错误，所以在百度的时候<strong>首先就看那种简单、篇幅少的文章，去试一下，不要找那些写的特别多的</strong>,就会少很多麻烦，也省时间。不得不说百度确实是个好东西，平常遇到的很多问题都可以先去百度一下，解决之后印象也比较深。</p><p>​    这次博客就写这么多了，我们下篇见！！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;​    本人是学习网络安全的一个萌新，这是第一次写博客还不太熟练，以后会在博客分享记录自己在网络安全道路的学习经历。hexo+github搭建博客也是现在使用比较多、比较好用的方式了（当时学长就是推荐我们使用hexo搭建自己的博客），下面进入正题。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
