<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>流年、乱了浮生</title>
  
  <subtitle>“勿忘初心，方得始终”</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-03-31T07:57:29.834Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>袁</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>css知识总结</title>
    <link href="http://yoursite.com/2019/03/30/css%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2019/03/30/css知识总结/</id>
    <published>2019-03-30T09:05:48.000Z</published>
    <updated>2019-03-31T07:57:29.834Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><h4 id="1-CSS定义和三种引用方式"><a href="#1-CSS定义和三种引用方式" class="headerlink" title="1.CSS定义和三种引用方式"></a>1.CSS定义和三种引用方式</h4><p>​    CSS全称为“层叠样式表 (Cascading Style Sheets)”，作用是为html元素去定义样式能够实现内容与表现相分离，提高代码的可重用性和可维护性。使用CSS样式的可以通过定义某个样式，使网页不同位置的文字有着统一的字体、字号或者颜色等。<a id="more"></a> 一个完整的页面 = HTML + CSS，HTML显示页面内容，CSS构建HTML样式。</p><p>​    CSS引用方式有三种：行内样式、内部样式表、外部样式表</p><p>​    1）行内样式： 使用style属性在HTML元素中引入CSS样式（只能控制某一个元素的显示效果)</p><p>​    例：&lt; p  style=”font-size：10px；color：red；”&gt;&lt;/ p&gt; </p><p>​    2）内部样式表： 将样式放在&lt; style&gt;标签中，&lt; style&gt;标签写在&lt; head&gt;标签中    </p><p>​    例：<img src="/2019/03/30/css知识总结/QQ截图20190331151845.png" alt="梨1" title="梨1"></p><p>​    3）外部样式表： 将CSS代码保存在以.css结尾的css样式文件中，再进行引用</p><p>​    用法：在&lt; head&gt;&lt;/ head&gt;中写以下代码：&lt; link rel=”stylesheet” type=”text/css” href=”链接的css文件地址” /&gt;（这是一种常用的方式）</p><p>​    例：<img src="/2019/03/30/css知识总结/QQ截图20190331151911.png" alt="梨2" title="梨2"></p><p>​    特点：实现内容与表现相分离；将可重用性和可维护性体现的最完美(所有的页面都能用)；可以在整个网站乃至于互联网中做通用的样式定义。</p><p>​    <strong>样式优先级：行内样式 &gt; 内部样式表 &gt; 外部样式表</strong>    </p><p>​    内部样式表 或 外部样式表，级别处于中间位置；就近原则（谁靠下，以谁为主）。</p><h4 id="2-CSS语法"><a href="#2-CSS语法" class="headerlink" title="2.CSS语法"></a>2.CSS语法</h4><p>&nbsp;基本语法： 样式声明：属性：值；&nbsp;&nbsp;&nbsp;样式规则：选择器 和 样式声明</p><p>​    特征：1）继承性：大部分的CSS样式属性，是可以被继承的。继承：子级不用单独定义样式，可以直接使用父级的东西。2）层叠性：为一个元素定义多个样式的时候，样式不冲突时，多个样式表中的样式可以层叠(合并)为一个。3）优先级：样式冲突时，按照不同样式规则的优先级来应用样式。</p><p>​    rgb色彩模式：R  红色；G  绿色；B  蓝色    例：color： rgb（255，0，0）  或  rgb（100%，%0，%0）； 颜色单位：#rrggbb；每一位取0~9，例：#0123456</p><h4 id="3-CSS选择器"><a href="#3-CSS选择器" class="headerlink" title="3.CSS选择器"></a>3.CSS选择器</h4><p>​    1）通用选择器 作用：匹配页面中的任何一个元素 语法：* {样式规则}</p><p>​    2）元素选择器 作用:匹配页面中的指定的元素； 语法：元素名称作为选择器，如： body、p等。</p><p>​    3）类选择器  作用：定义公共的样式，由任意一个标签进行引用</p><p>​        语法：.className{ ：； } 例：.red_back{ } .red_back{ }</p><p>​        引用：在标签中，通过class属性 对类选择器名称进行引用</p><p>​        注意：在一个元素中，可以同时对多个类选择器进行引用。多个类选择器之间用空格隔开。</p><p>​    4）类选择器-分类选择器</p><p>​        作用：将类选择器和元素选择器结合起来使用，从而实现对某种元素不同样式的细分控制</p><p>​        语法：元素选择器 .className { } 例：div.red_back{ }</p><p>​    5）id选择器</p><p>​        作用：通过元素的id值，来声明定义元素的相关样式属性 语法：#idValue{ }</p><p>​    6）群组选择器</p><p>​        作用：选择器声明，是以 , 隔开的选择器列表</p><p>​        语法：selector1，selector2，selector3，selector4…{ } 例：div，p，.redback{color：red；}</p><p>​    7）后代、子代选择器</p><p>​        只存在一级的父子关系：可以称之为子代或者后代</p><p>​        多于一级的嵌套关系：只能称之为后代 后代语法：selector1 selector2{ }</p><p>​        例：div span{ } /<em> 匹配出所有div元素中的span元素 </em>/ #content .redBack{ }</p><p>​        子代作用：只能匹配出父子关系的子级元素</p><p>​        目的：不希望选择任意的后代元素，而是希望缩小范围，只选择某个具体的子元素时使用。 </p><p>​        语法：selector1&gt;selector2{ }</p><p>​    8）伪类选择器作用：匹配元素的不同状态   语法：：作为开始的</p><p>​        分类：<br>​        链接伪类 作用：只匹配超链接的状态<br>​        ：link：适用于尚未访问的超链接 ：visited：适用于访问过后的超链接<br>​        动态伪类<br>​        ：hover：适用于鼠标悬停在html元素上的状态<br>​        ：active：适用于html元素被激活时<br>​        ：focus：适用于html元素获取焦点时的状态</p><p>​        此外还有目标伪类、元素状态伪类、结构伪类、否定伪类。详细的伪类选择器可以参考链接：<a href="https://blog.csdn.net/Panda_m/article/details/50084699" target="_blank" rel="noopener">https://blog.csdn.net/Panda_m/article/details/50084699</a></p><h4 id="4-CSS背景"><a href="#4-CSS背景" class="headerlink" title="4.CSS背景"></a>4.CSS背景</h4><p>​    1）背景颜色：background-color：red（或颜色单位）；</p><p>​    2）背景图片：例：background-image：url(“1.png”)；</p><p>​    3）背景平铺：background-repeat：值</p><p>​        取值：repeat ：即水平方向又垂直方向平铺(默认值)；no-repeat ： 没有平铺；repeat-x ：     仅水平方向平铺；repeat-y ：仅垂直方向平铺 </p><p>​    4）背景固定：background-attachment：值</p><p>​        默认情况，背景图片会随着滚动条而发生滚动，可以通过背景图片固定的方式解决此问题，    让背景图保持在网页的可视化窗口的某个固定为止处不随着滚动条发生位置变化。</p><p>​        注意：尽量将背景图片加给body元素</p><p>​        取值：scroll ：背景会随滚动条发生滚动（默认值）；fixed ：固定，背景不会随着内容而发    生滚动。</p><p>​    5）背景定位：background-position：x值 y值；</p><p>​        取值：x  y ：x水平偏移位置,值为正 向右移动，值为负，向左移动<br>​        y垂直偏移位置，值为正 向下移动，值为负，向上移动<br>​        x%  y% ： 左上角 ： 0% 0%； 右下角 ：100% 100%； 居中显示 ： 50% 50%<br>​        关键字：x ：left，center，right ； y ： top，center，bottom</p><p>​    6）背景属性：将以上几个属性全部综合到一起,通过一个属性描述所有的值</p><p>​        属性:background：值；   取值：color  url()  repeat  attachment  position；例：backgroud：url（”1.png”） repeat-y；</p><h4 id="5-CSS文本格式化"><a href="#5-CSS文本格式化" class="headerlink" title="5.CSS文本格式化"></a>5.CSS文本格式化</h4><p>​    字体样式：例：font-family：”宋体”； 字体大小：font-size：16px（默认）；</p><p>​    字体加粗：font-weight：bold；（相当于&lt; b&gt; &lt;/ b&gt;）；字体样式：font-style：italic；（斜体）</p><p>​    字体属性：font：font-style font-variant font-weight font-size font-family；常用设置方式：font：12px “微软雅黑”；</p><p>​    文本颜色：color：red； </p><p>​    字符间距：letter-spacing： 0px（默认）；空格距离：word-spacing：0px（默认）；</p><p>​    文字线条修饰 属性：text-decoration：值；  取值：none 无线条、underline 下划线、overline 上划线、line-through 删除线</p><p>​    文本对齐：text-align：left（默认）、 right 、center、justify（两边对齐）；</p><p>​    文本缩进：text-indent 2px； 行高：line-height 3px；</p><p>​    英文大小写：text-transform：uppercase（全大写）、lowercase（全小写）、capitalize（首字母大写）；</p><h4 id="6-CSS链接和列表"><a href="#6-CSS链接和列表" class="headerlink" title="6.CSS链接和列表"></a>6.CSS链接和列表</h4><p>​    1）链接</p><p>​        a：link  初始状态；a：visited  已访问过；a：hover  鼠标放在链接上时；a：active  链接被    点击时</p><p>​        注意：a：hover 必须跟在 a：link 和 a：visited后面，a：active 必须跟在 a：hover后面</p><p>​        还可以添加状态例如：a：hover{  color：red； font-size：30px；} </p><p>​    2）列表</p><p>​        列表项标志：list-style-type：值； 取值：none 无标记（常用）、disc 实心圆、circle 空心    圆、square 实心方块……</p><p>​        列表项图像：list-style-image：值； 取值：url(图像路径)；功能：使用自定义图像，作为列    表项的显示标识</p><p>​        列表项位置：list-style-position：值；取值：outside：列表项标识位于文本之外（默认）；     inside：列表项标识更改在文本范围之内</p><h4 id="7-CSS盒子模型"><a href="#7-CSS盒子模型" class="headerlink" title="7.CSS盒子模型"></a>7.CSS盒子模型</h4><p>​    外边框：border：5px solid（实线） black；</p><p>​    内边距：padding：20px（上下） 50px（左右）；padding：20px 30px 40px 50px；（顺时针，上右下左）</p><p>​    外边距：margin：30px；（与padding类似）</p><p>​    另外单边设置：margin-top：上外边距 ； margin-right：右外边距margin-bottom：下外边距 ； margin-left：左外边距</p><p>​    边框合并：border-collapse：值；取值：separate 分离边框（默认）、collapse 合并边框</p><p>​    更详细盒子模型，可以参考链接：<a href="https://www.cnblogs.com/clearsky/p/5696286.html" target="_blank" rel="noopener">https://www.cnblogs.com/clearsky/p/5696286.html</a></p><h4 id="8-CSS布局与定位"><a href="#8-CSS布局与定位" class="headerlink" title="8.CSS布局与定位"></a>8.CSS布局与定位</h4><p>​    可以参考链接：<a href="https://blog.csdn.net/weixin_38902950/article/details/84674199" target="_blank" rel="noopener">https://blog.csdn.net/weixin_38902950/article/details/84674199</a></p><h4 id="9-总结"><a href="#9-总结" class="headerlink" title="9.总结"></a>9.总结</h4><p>​    CSS中选择器、盒模型、布局与定位是最重要的几部分，想深入了解可以多找几篇文章看看，本人是初学者所以这几部分就没有详细写。</p><p><strong>本文参考的链接：</strong><a href="https://www.cnblogs.com/wangdongdong1234/p/6394510.html" target="_blank" rel="noopener">https://www.cnblogs.com/wangdongdong1234/p/6394510.html</a></p><p><strong>参考视频：</strong><a href="https://www.bilibili.com/video/av26764447/?p=16" target="_blank" rel="noopener">https://www.bilibili.com/video/av26764447/?p=16</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;CSS&quot;&gt;&lt;a href=&quot;#CSS&quot; class=&quot;headerlink&quot; title=&quot;CSS&quot;&gt;&lt;/a&gt;CSS&lt;/h2&gt;&lt;h4 id=&quot;1-CSS定义和三种引用方式&quot;&gt;&lt;a href=&quot;#1-CSS定义和三种引用方式&quot; class=&quot;headerlink&quot; title=&quot;1.CSS定义和三种引用方式&quot;&gt;&lt;/a&gt;1.CSS定义和三种引用方式&lt;/h4&gt;&lt;p&gt;​    CSS全称为“层叠样式表 (Cascading Style Sheets)”，作用是为html元素去定义样式能够实现内容与表现相分离，提高代码的可重用性和可维护性。使用CSS样式的可以通过定义某个样式，使网页不同位置的文字有着统一的字体、字号或者颜色等。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>html 知识总结</title>
    <link href="http://yoursite.com/2019/03/27/html%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2019/03/27/html知识总结/</id>
    <published>2019-03-27T11:31:36.000Z</published>
    <updated>2019-03-31T07:30:51.726Z</updated>
    
    <content type="html"><![CDATA[<h2>HTML</h2><p>1.基本结构<br>&lt; !DOCTYPE html&gt;//声明文档的解析类型，必须写在第一行<br>&lt; html&gt;//根标签(开始)<a id="more"></a></p><p>&lt; head&gt;//头标签(开始)<br>&lt; meta charset=”utf-8”&gt;//声明为utf-8编码，避免出现乱码<br>&lt; title&gt;html+css&lt;/ title&gt;//页面标题标签<br>&lt;/ head&gt;//头标签(结束)</p><p>&lt; body&gt;//主体标签(开始)<br>    &lt; h1&gt;我的标题&lt;/ h1&gt;//内容标题标签<br>    &lt; p&gt;我的段落。&lt;/ p&gt;//段落标签<br>&lt;/ body&gt;//主体标签(结束)<br>&lt;/ html&gt;//根标签(结束)<br>注：:HTML中不支持 空格、回车、制表符，它们都会被解析成一个空白字符。</p><p>2.标签<br>标签写法要用小写字母，由尖括号包围，成对出现的标签称为双标签不能忘记结束标签。单独出现的标签叫单标签，最好也要闭合，形式为&lt;标签名 /&gt;，例如&lt; br /&gt;(换行标签)。&lt; !DOCTYPE html&gt;不是标签，只是声明。从开始标签到结束标签所有代码就是HTML的元素，之间的内容叫元素内容。没有内容的 HTML 元素被称为空元素，空元素是在开始标签中关闭的，例如&lt; br /&gt;。<br>3.属性<br>  属性可以在元素中添加附加信息，属性一般描述于开始标签，属性总是以名称/值对的形式出现。例如&lt; a herf=” <a href="http://www.baidu.com" target="_blank" rel="noopener">http://www.baidu.com</a> “&gt; 百度一下&lt; /a&gt;，&lt; a&gt;为链接标签，herf是属性名称，双引号中是链接地址，称为属性值，属性和属性值，尽量小写，也可以自定义属性(不能使用中文)。<br>4.注释<br>  &lt; !– 注释的内容 –&gt;<br>5.水平线<br>  单标签：&lt; hr /&gt;可连续使用多个。<br>6.标题<br>  是通过&lt; h1&gt;-&lt; h6&gt;标签进行定义的，&lt; h1&gt;定义最大的标题。&lt; h6&gt;定义最小的标题。浏览器会自动地在标题的前后添加空行。<br>7.段落<br>  通过&lt; p&gt;标签定义，浏览器会自动地在段落的前后添加空行，如果在不产生一个新段落的情况下进行换行，须使用&lt; br /&gt;标签。<br>8.文本格式化(双标签)<br>  &lt; b&gt;定义粗体文字，&lt; i&gt;定义斜体字，&lt; small&gt;定义小号字，&lt; big&gt;定义大号字，&lt; strong&gt;定义加重语气。<br>9.链接<br>  使用&lt; a&gt;设置超文本链接，如&lt; a href=” <a href="http://www.baidu.com" target="_blank" rel="noopener">http://www.baidu.com</a> “&gt; 百度一下&lt; /a&gt;。<br>10.图像<br>  使用&lt; img&gt;标签，&lt; img border=”边框属性” src=”图片路径” alt=”为图像定义一串预备的可替换的文本” width=”图像宽度” height=”图像高度” &gt;<br>11.表格<br>  表格由 &lt; table&gt; 标签来定义。&lt; tr&gt;定义行，&lt; td&gt;定义表格数据，&lt; th&gt;定义表格表头，大多数浏览器会把表头显示为粗体居中的文本。写法：</p><p>&lt; table border=”1”&gt;<br>    &lt; tr&gt;<br>        &lt; th&gt;….&lt;/ th&gt;<br>        &lt; th&gt;…..&lt;/ th&gt;<br>    &lt;/ tr&gt;<br>    &lt; tr&gt;<br>        &lt; td&gt;…….&lt;/ td&gt;<br>        &lt; td&gt;………&lt;/ td&gt;<br>    &lt;/ tr&gt;<br>&lt;/ table&gt;</p><p>12.列表<br>  无序列表：&lt; ul&gt;&lt; li&gt;苹果&lt;/ li&gt;&lt; li&gt;梨&lt;/ li&gt;&lt;/ ul&gt;<br>  有序列表：&lt; ol&gt;&lt; li&gt;苹果&lt;/ li&gt;&lt; li&gt;梨&lt;/ li&gt;&lt;/ ol&gt;<br>13.表单<br>  使用&lt; form&gt;标签定义，输入标签为&lt; input&gt;，输入类型是由类型属性 type 定义的。例：</p><p>&lt; form action=”表单数据发送的地址”&gt;<br>User : &lt; input type=”text” name=”user”&gt;//文本域<br>Password: &lt; input type=”password” name=”password”&gt;//密码域<br>&lt; input type=”submit” value=”提交”&gt;//提交按钮<br>&lt;/ form&gt;</p><p>  单选按钮：&lt; input type=”radio”&gt; 标签定义了表单单选框选项。<br>  复选框：&lt; input type=”checkbox”&gt; 定义了复选框。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2&gt;HTML&lt;/h2&gt;

&lt;p&gt;1.基本结构&lt;br&gt;&amp;lt; !DOCTYPE html&amp;gt;//声明文档的解析类型，必须写在第一行&lt;br&gt;&amp;lt; html&amp;gt;//根标签(开始)&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>hexo搭建博客</title>
    <link href="http://yoursite.com/2019/03/27/hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2019/03/27/hexo搭建博客/</id>
    <published>2019-03-27T11:24:39.000Z</published>
    <updated>2019-03-29T14:21:30.806Z</updated>
    
    <content type="html"><![CDATA[<h2>hexo+github 搭建自己的博客</h2><p>​    本人是学习网络安全的一个萌新，这是第一次写博客还不太熟练，以后会在博客分享记录自己在网络安全道路的学习经历。hexo+github搭建博客也是现在使用比较多、比较好用的方式了（当时学长就是推荐我们使用hexo搭建自己的博客），下面进入正题。<a id="more"></a></p><p>推荐链接：<a href="https://url.cn/5W2XCKI" target="_blank" rel="noopener">https://url.cn/5W2XCKI</a>   </p><p>照着这个一步一步来就可以初步搭好自己的博客了（我就是看的这个搭好了自己的博客）。其中有一点细节需要注意<img src="/2019/03/27/hexo搭建博客/QQ截图20190329213320.png" alt="1" title="1"></p><p>红线地方输入的时候不是一行，而是<img src="/2019/03/27/hexo搭建博客/20190329213924.png" alt="2" title="2"></p><p>这样自己博客就初步搭好了，后续就是配置、主题等操作了，这里也推荐一个博客：<a href="https://blog.csdn.net/wsmrzx/article/details/81478595" target="_blank" rel="noopener">https://blog.csdn.net/wsmrzx/article/details/81478595</a>  博主的hexo系列可以参考一下，当然也可以在网上找，也有很多的关于hexo+github搭建博客的文章。</p><h2 id="自己搭建过程中的一些想法"><a href="#自己搭建过程中的一些想法" class="headerlink" title="自己搭建过程中的一些想法"></a>自己搭建过程中的一些想法</h2><p>​    在搭建过程中可能会出现一些意外的错误，遇到意外错误可以把出现的错误代码直接复制下来，粘到百度去搜一下，发表一下自己的观点：搭建博客过程中或者学习其他东西遇到错误，一般都是一些小错误，所以在百度的时候<strong>首先就看那种简单、篇幅少的文章，去试一下，不要找那些写的特别多的</strong>,就会少很多麻烦，也省时间。不得不说百度确实是个好东西，平常遇到的很多问题都可以先去百度一下，解决之后印象也比较深。</p><p>​    这次博客就写这么多了，我们下篇见！！</p>]]></content>
    
    <summary type="html">
    
      &lt;h2&gt;hexo+github 搭建自己的博客&lt;/h2&gt;

&lt;p&gt;​    本人是学习网络安全的一个萌新，这是第一次写博客还不太熟练，以后会在博客分享记录自己在网络安全道路的学习经历。hexo+github搭建博客也是现在使用比较多、比较好用的方式了（当时学长就是推荐我们使用hexo搭建自己的博客），下面进入正题。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
